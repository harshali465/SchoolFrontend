{"version":3,"file":"static/js/352.853e470b.chunk.js","mappings":"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","sources":["views/Managestudents/StudentListing.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport {\n  CButton,\n  CCol,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CFormLabel,\n  CFormSelect,\n  CFormCheck,\n  CFormFeedback,\n  CInputFile,\n  CRow,\n  CContainer,\n  CPagination,\n  CPaginationItem,\n} from \"@coreui/react\";\nimport axios from \"axios\";\n// imports for modal\nimport {\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n} from \"@coreui/react\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nfunction StudentTable() {\n  const getUsers = async () => {\n    try {\n      const token =\n        \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NGIzNzQxYTRlOTIyNzU1ZTEzZjUwYSIsImlhdCI6MTY5OTQzMjE5NiwiZXhwIjoxNzAyMDI0MTk2fQ.Gn_VwncOvLdq9728FXSIESpmSw8J7Nu5d0AyezbwoOU\";\n\n      const response = await axios.get(\"http://localhost:3001/api/v1/users\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        params: {\n          role: \"student\",\n        },\n      });\n\n      console.log(response);\n      setdummystudents(response.data.data.docs);\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  };\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const navigate = useNavigate();\n  const [dummystudents, setdummystudents] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [visible, setVisible] = useState(false);\n  // {\n  //   id: 1,\n  //   name: \"John Doe\",\n  //   class: \"Grade 5\",\n  //   division: \"A\",\n  //   behaviorPoints: 450,\n  //   status: \"active\",\n  //   selected: false,\n  // },\n  // {\n  //   id: 2,\n  //   name: \"Alice Smith\",\n  //   class: \"Grade 6\",\n  //   division: \"B\",\n  //   behaviorPoints: 380,\n  //   status: \"active\",\n  //   selected: false,\n  // },\n  // {\n  //   id: 3,\n  //   name: \"Bob Johnson\",\n  //   class: \"Grade 5\",\n  //   division: \"A\",\n  //   behaviorPoints: 510,\n  //   status: \"inactive\",\n  //   selected: false,\n  // },\n  // {\n  //   id: 4,\n  //   name: \"Eva Wilson\",\n  //   class: \"Grade 6\",\n  //   division: \"C\",\n  //   behaviorPoints: 420,\n  //   status: \"active\",\n  //   selected: false,\n  // },\n  // {\n  //   id: 5,\n  //   name: \"Mike Brown\",\n  //   class: \"Grade 7\",\n  //   division: \"A\",\n  //   behaviorPoints: 320,\n  //   status: \"inactive\",\n  //   selected: false,\n  // },\n  // {\n  //   id: 6,\n  //   name: \"Linda Davis\",\n  //   class: \"Grade 7\",\n  //   division: \"B\",\n  //   behaviorPoints: 480,\n  //   status: \"active\",\n  //   selected: false,\n  // },\n  // {\n  //   id: 7,\n  //   name: \"Chris Lee\",\n  //   class: \"Grade 5\",\n  //   division: \"B\",\n  //   behaviorPoints: 390,\n  //   status: \"inactive\",\n  //   selected: false,\n  // },\n  // {\n  //   id: 8,\n  //   name: \"Emily Wilson\",\n  //   class: \"Grade 6\",\n  //   division: \"A\",\n  //   behaviorPoints: 550,\n  //   status: \"active\",\n  //   selected: false,\n  // },\n  // ]);\n\n  const [selectAll, setSelectAll] = useState(false);\n  const [collecIds, setcollecIds] = useState([]);\n\n  const toggleSelectAll = () => {\n    setcollecIds([]);\n\n    if (!selectAll) {\n      const selectedIds = dummystudents.map((student) => student._id);\n      setcollecIds(selectedIds);\n    } else {\n      setcollecIds([]);\n    }\n    // setting frontend to checked\n    setSelectAll(!selectAll);\n    setdummystudents((prevStudents) =>\n      prevStudents.map((student) => ({ ...student, selected: !selectAll }))\n    );\n  };\n\n  const handleSelect = async (index) => {\n    const updatedStudents = [...dummystudents];\n    if (updatedStudents[index].selected === false) {\n      setcollecIds([...collecIds, updatedStudents[index]._id]);\n    } else {\n      setcollecIds((prevCollecIds) =>\n        prevCollecIds.filter((id) => id !== updatedStudents[index]._id)\n      );\n    }\n\n    updatedStudents[index].selected = !updatedStudents[index].selected;\n    setdummystudents(updatedStudents);\n  };\n\n  const markActive = async () => {\n    const token =\n      \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NGIzNzQxYTRlOTIyNzU1ZTEzZjUwYSIsImlhdCI6MTY5OTQzMjE5NiwiZXhwIjoxNzAyMDI0MTk2fQ.Gn_VwncOvLdq9728FXSIESpmSw8J7Nu5d0AyezbwoOU\";\n\n    try {\n      const response = await axios.patch(\n        \"http://localhost:3001/api/v1/users/student\",\n        {\n          ids: collecIds,\n          active: true,\n        },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      console.log(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n\n    const updatedStudents = dummystudents.map((student) =>\n      student.selected ? { ...student, active: true } : student\n    );\n    setdummystudents(updatedStudents);\n  };\n\n  const markInactive = async () => {\n    const token =\n      \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NGIzNzQxYTRlOTIyNzU1ZTEzZjUwYSIsImlhdCI6MTY5OTQzMjE5NiwiZXhwIjoxNzAyMDI0MTk2fQ.Gn_VwncOvLdq9728FXSIESpmSw8J7Nu5d0AyezbwoOU\";\n\n    try {\n      const response = await axios.patch(\n        \"http://localhost:3001/api/v1/users/student\",\n        {\n          ids: collecIds,\n          active: false,\n        },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      console.log(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n    const updatedStudents = dummystudents.map((student) =>\n      student.selected ? { ...student, active: false } : student\n    );\n    setdummystudents(updatedStudents);\n  };\n\n  const deleteSelected = async () => {\n    const token =\n      \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NGIzNzQxYTRlOTIyNzU1ZTEzZjUwYSIsImlhdCI6MTY5OTQzMjE5NiwiZXhwIjoxNzAyMDI0MTk2fQ.Gn_VwncOvLdq9728FXSIESpmSw8J7Nu5d0AyezbwoOU\";\n\n    try {\n      const response = await axios.delete(\n        \"http://localhost:3001/api/v1/users/student\",\n        {\n          data: { ids: collecIds },\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      console.log(response.data);\n      setVisible(false);\n    } catch (error) {\n      console.error(error);\n    }\n    getUsers();\n    // const updatedStudents =\n    // dummystudents.filter(\n    //   (student) => !student.selected\n    // );\n    // setdummystudents(updatedStudents);\n  };\n\n  const editStudent = (studentid) => {\n    navigate(\"/editstudent\", {\n      state: { studentid: studentid },\n    });\n  };\n\n  //   filter states\n  const [filterKeyword, setFilterKeyword] = useState(\"\");\n  const [filterClass, setFilterClass] = useState(\"\");\n  const [filterDivision, setFilterDivision] = useState(\"\");\n  const [filterMinBehaviorPoints, setFilterMinBehaviorPoints] = useState(\"\");\n  const [filterMaxBehaviorPoints, setFilterMaxBehaviorPoints] = useState(\"\");\n\n  //   function calling in the table\n  const applyFilters = (student) => {\n    // Apply filters to the student based on filter values\n    return (\n      student.firstName.toLowerCase().includes(filterKeyword.toLowerCase()) &&\n      (filterClass === \"\" || student.class === filterClass) &&\n      (filterDivision === \"\" || student.division === filterDivision) &&\n      (filterMinBehaviorPoints === \"\" ||\n        student.behaviousPoints.positivePoints -\n          student.behaviousPoints.negativePoints >=\n          parseInt(filterMinBehaviorPoints)) &&\n      (filterMaxBehaviorPoints === \"\" ||\n        student.behaviousPoints.positivePoints -\n          student.behaviousPoints.negativePoints <=\n          parseInt(filterMaxBehaviorPoints))\n    );\n  };\n\n  //   pagination\n\n  //   const [pageSize] = useState(4);\n  const [pageSize, setpageSize] = useState(students.length);\n  const [currentPage, setCurrentPage] = useState(1); // Current page, starts at 1\n\n  const handlePageChange = (newPage) => {\n    setCurrentPage(newPage);\n  };\n\n  // Calculate the range of students to display based on the current page\n  const startIndex = (currentPage - 1) * pageSize;\n  const endIndex = startIndex + pageSize;\n  const displayedStudents = students.slice(startIndex, endIndex);\n\n  const numPages = Math.ceil(students.length / pageSize);\n\n  //   exporting to excel sheet\n\n  const exportToCSV = () => {\n    const selectedStudents = dummystudents.filter(\n      (student) => student.selected\n    );\n    const headers = [\"Name\", \"Class\", \"Division\", \"Behavior Points\", \"Status\"];\n    const csvData = [headers].concat(\n      selectedStudents.map((student) => [\n        student.firstName,\n        student.class,\n        student.division,\n        student.behaviousPoints.positivePoints -\n          student.behaviousPoints.negativePoints,\n        student.active ? \"Active\" : \"Inactive\",\n      ])\n    );\n\n    // Convert the data to a CSV string\n    const csvContent = csvData.map((row) => row.join(\",\")).join(\"\\n\");\n    const blob = new Blob([csvContent], { type: \"text/csv\" });\n    const url = URL.createObjectURL(blob);\n\n    // Create a download link\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"selected_students.csv\"; // File name\n    a.style.display = \"none\";\n    document.body.appendChild(a);\n\n    a.click(); // Trigger the download\n    URL.revokeObjectURL(url); // Release the object URL\n    document.body.removeChild(a);\n  };\n\n  const redirectto = () => {\n    navigate(\"/addstudent\");\n  };\n\n  return (\n    <div>\n      {/* modal */}\n      <CModal\n        backdrop=\"static\"\n        visible={visible}\n        onClose={() => {\n          setVisible(false);\n          setcollecIds([]);\n        }}\n        aria-labelledby=\"StaticBackdropExampleLabel\"\n      >\n        <CModalHeader>\n          <CModalTitle id=\"StaticBackdropExampleLabel\">\n            Delete students\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          Are you sure you wish to delete the student/students?\n        </CModalBody>\n        <CModalFooter>\n          <CButton\n            color=\"secondary\"\n            onClick={() => {\n              setVisible(false);\n              setcollecIds([]);\n            }}\n          >\n            Close\n          </CButton>\n          <CButton color=\"primary\" onClick={() => deleteSelected()}>\n            Yes!\n          </CButton>\n        </CModalFooter>\n      </CModal>\n      {/* Filters */}\n      <div className=\"mb-2\">\n        <div className=\"row pb-5\">\n          <div className=\"col-md-6 \">\n            <div className=\"display-6 pb-3 float-end\">Student listing</div>\n          </div>\n\n          <div className=\"col-md-6 \">\n            <button\n              className=\"btn btn-primary float-end\"\n              onClick={() => {\n                redirectto();\n              }}\n            >\n              Add student\n            </button>\n          </div>\n        </div>\n        {/* filters */}\n        <div className=\"filters d-flex justify-content-between\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Search by keyword\"\n            value={filterKeyword}\n            onChange={(e) => setFilterKeyword(e.target.value)}\n          />\n          <select\n            className=\"form-select\"\n            value={filterClass}\n            onChange={(e) => setFilterClass(e.target.value)}\n          >\n            <option value=\"\">All Classes</option>\n            <option>Grade 2</option>\n            <option>Grade 3</option>\n            <option>Grade 1</option>\n          </select>\n          <select\n            className=\"form-select\"\n            value={filterDivision}\n            onChange={(e) => setFilterDivision(e.target.value)}\n          >\n            <option value=\"\">All Divisions</option>\n            <option>div A</option>\n            <option>div B</option>\n            <option>div C</option>\n          </select>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Min Behavior Points\"\n            value={filterMinBehaviorPoints}\n            onChange={(e) => setFilterMinBehaviorPoints(e.target.value)}\n          />\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Max Behavior Points\"\n            value={filterMaxBehaviorPoints}\n            onChange={(e) => setFilterMaxBehaviorPoints(e.target.value)}\n          />\n        </div>\n      </div>\n\n      {/* buttons for action */}\n\n      <div className=\"pb-4 flex-wrap\">\n        <button className=\"btn btn-primary btn-md \" onClick={markActive}>\n          Mark Active\n        </button>\n        <button className=\"btn btn-dark btn-md \" onClick={markInactive}>\n          Mark Inactive\n        </button>\n        <button\n          className=\"btn btn-dark btn-md \"\n          onClick={() => {\n            setVisible(!visible);\n          }}\n        >\n          Delete Selected\n        </button>\n        <button\n          className=\"btn btn-success btn-md float-end\"\n          onClick={exportToCSV}\n        >\n          Export to Excel\n        </button>\n      </div>\n\n      <table className=\"table table-bordered\">\n        <thead>\n          <tr>\n            <th className=\"text-center\">\n              <input\n                type=\"checkbox\"\n                checked={selectAll}\n                onChange={toggleSelectAll}\n              />\n            </th>\n            <th className=\"text-center\">Name</th>\n            <th className=\"text-center\">Class</th>\n            <th className=\"text-center\">Division</th>\n            <th className=\"text-center\">Behavior Points</th>\n            <th className=\"text-center\">Status</th>\n            <th className=\"text-center\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {dummystudents\n            .filter((student) => applyFilters(student))\n            .map((student, index) => (\n              <tr key={index}>\n                <td className=\"text-center align-middle\">\n                  <input\n                    type=\"checkbox\"\n                    checked={student.selected}\n                    onChange={() => handleSelect(index)}\n                  />\n                </td>\n                <td className=\"text-center align-middle\">\n                  {student.firstName}\n                </td>\n                <td className=\"text-center align-middle\">{student.class}</td>\n                <td className=\"text-center align-middle\">{student.division}</td>\n                <td className=\"text-center align-middle\">\n                  {student.behaviousPoints.positivePoints -\n                    student.behaviousPoints.negativePoints}\n                </td>\n                <td className=\"text-center align-middle\">\n                  {student.active ? \"active\" : \"inactive\"}\n                </td>\n                <td className=\"text-center align-middle\">\n                  <button\n                    className=\"btn btn-primary btn-md\"\n                    onClick={() => {\n                      editStudent(student._id);\n                    }}\n                  >\n                    Edit\n                  </button>\n                  <button\n                    className=\"btn btn-dark btn-md\"\n                    onClick={() => {\n                      setcollecIds([]);\n                      setcollecIds([student._id]);\n                      setVisible(true);\n                    }}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      <div className=\"pagination\">\n        <CPagination aria-label=\"Page navigation\">\n          <CPaginationItem\n            onClick={() => handlePageChange(currentPage - 1)}\n            disabled={currentPage === 1}\n          >\n            Previous\n          </CPaginationItem>\n          {Array.from({ length: numPages }, (_, i) => (\n            <CPaginationItem\n              key={i}\n              active={currentPage === i + 1}\n              onClick={() => handlePageChange(i + 1)}\n            >\n              {i + 1}\n            </CPaginationItem>\n          ))}\n          <CPaginationItem\n            onClick={() => handlePageChange(currentPage + 1)}\n            disabled={currentPage === Math.ceil(students.length / pageSize)}\n          >\n            Next\n          </CPaginationItem>\n\n          <div className=\"d-flex\">\n            <CPaginationItem>Entries:</CPaginationItem>\n            <CPaginationItem>\n              <select\n                value={pageSize}\n                onChange={(e) => setpageSize(e.target.value)}\n              >\n                <option value=\"2\">2</option>\n                <option value=\"4\">4</option>\n                <option value={students.length}>all</option>\n                {/* Add more options as needed */}\n              </select>\n            </CPaginationItem>\n          </div>\n        </CPagination>\n      </div>\n    </div>\n  );\n}\n\nexport default StudentTable;\n"],"names":["getUsers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","get","headers","Authorization","concat","params","role","sent","console","log","setdummystudents","data","docs","t0","error","stop","apply","arguments","useEffect","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","dummystudents","_useState3","_useState4","students","_useState5","_useState6","visible","setVisible","_useState7","_useState8","selectAll","setSelectAll","_useState9","_useState10","collecIds","setcollecIds","handleSelect","_ref2","_callee2","index","updatedStudents","_context2","_toConsumableArray","selected","_id","prevCollecIds","filter","id","_x","markActive","_ref3","_callee3","_context3","patch","ids","active","map","student","_objectSpread","markInactive","_ref4","_callee4","_context4","deleteSelected","_ref5","_callee5","_context5","delete","_useState11","_useState12","filterKeyword","setFilterKeyword","_useState13","_useState14","filterClass","setFilterClass","_useState15","_useState16","filterDivision","setFilterDivision","_useState17","_useState18","filterMinBehaviorPoints","setFilterMinBehaviorPoints","_useState19","_useState20","filterMaxBehaviorPoints","setFilterMaxBehaviorPoints","_useState21","length","_useState22","pageSize","setpageSize","_useState23","_useState24","currentPage","setCurrentPage","handlePageChange","newPage","startIndex","endIndex","numPages","slice","Math","ceil","_jsxs","children","CModal","backdrop","onClose","_jsx","CModalHeader","CModalTitle","CModalBody","CModalFooter","CButton","color","onClick","className","type","placeholder","value","onChange","e","target","selectedStudents","csvContent","firstName","class","division","behaviousPoints","positivePoints","negativePoints","row","join","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","style","display","body","appendChild","click","revokeObjectURL","removeChild","checked","selectedIds","prevStudents","toLowerCase","includes","parseInt","applyFilters","studentid","state","CPagination","CPaginationItem","disabled","Array","from","_","i"],"sourceRoot":""}