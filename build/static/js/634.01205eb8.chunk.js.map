{"version":3,"file":"static/js/634.01205eb8.chunk.js","mappings":"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","sources":["views/Adaats/AddAdaat.js","../node_modules/date-fns/esm/locale/ar-SA/_lib/formatDistance/index.js","../node_modules/date-fns/esm/locale/ar-SA/_lib/formatLong/index.js","../node_modules/date-fns/esm/locale/ar-SA/_lib/formatRelative/index.js","../node_modules/date-fns/esm/locale/ar-SA/_lib/localize/index.js","../node_modules/date-fns/esm/locale/ar-SA/index.js","../node_modules/date-fns/esm/locale/ar-SA/_lib/match/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  CButton,\n  CCol,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CFormLabel,\n  CFormSelect,\n  CFormCheck,\n  CFormFeedback,\n  CInputFile,\n  CRow,\n  CCardBody,\n  CCard,\n  CCardTitle,\n  CContainer,\n  CDateRangePicker,\n} from \"@coreui/react\";\n\nimport DatePicker from \"react-datepicker\";\nimport { registerLocale } from \"react-datepicker\";\nimport sa from \"date-fns/locale/ar-SA\";\n\nimport CIcon from \"@coreui/icons-react\";\nimport { cilLockLocked } from \"@coreui/icons\";\n// imports for modal\nimport {\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n} from \"@coreui/react\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nimport axios from \"axios\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useEffect } from \"react\";\n\nconst CustomInput = ({ value, onClick, labelName }) => (\n  <CFormInput\n    type=\"text\"\n    id=\"dateselect\"\n    placeholder=\"Adaat date\"\n    label={labelName}\n    onClick={onClick}\n    value={value}\n  />\n);\n\nfunction AddAdaat() {\n  registerLocale(\"sa\", sa);\n\n  const token = localStorage.getItem(\"accessToken\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n    category: \"\",\n    responseType: [],\n    customField: [\n      {\n        fieldTitle: \"\",\n        fieldType: \"\",\n        options: [\"\", \"\"],\n      },\n    ],\n    isSurat: \"\",\n    isRemark: \"\",\n    isImageUpload: \"\",\n    applicableTo: \"\",\n    isCompulsory: \"\",\n    startDate: new Date(),\n    endDate: \"\",\n    class: \"\",\n    repetation: \"\",\n    isImageUpload: \"\",\n    repeatDays: [],\n    responsetypeCustomField: [\n      {\n        cusresTitle: \"\",\n        cusresType: \"\",\n        cusresValue: [\"\"],\n      },\n    ],\n    repeatDays: [],\n    repeatMonths: [],\n    repeatDateForMonth: new Date(),\n    repeatDateForYear: new Date(),\n    customDate: new Date(),\n  });\n\n  const [showCustomOptions, setShowCustomOptions] = useState(false);\n  const [pop1, setpop1] = useState(false);\n  const [validated, setValidated] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [repeatPop1, setrepeatPop1] = useState(false);\n\n  const handleCheckboxChange = (e) => {\n    setShowCustomOptions(e.target.checked);\n    handleChange(e);\n  };\n  const handleimage = (e) => {\n    setpop1(e.target.checked);\n    handleChange(e);\n  };\n\n  const handleChange2 = (event) => {\n    const { name, value } = event.target;\n    if (name === \"male\") {\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        applicableTo: \"male\",\n      }));\n    } else if (name === \"female\") {\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        applicableTo: \"female\",\n      }));\n    } else if (name === \"both\") {\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        applicableTo: \"both\",\n      }));\n    } else if (name === \"isCompulsoryYes\") {\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        isCompulsory: true,\n      }));\n    } else if (name === \"isCompulsoryNo\") {\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        isCompulsory: false,\n      }));\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, checked, value } = event.target;\n\n    if (checked) {\n      if (name === \"custom\") {\n        setFormData((prevFormData) => ({\n          ...prevFormData,\n          responseType: [...prevFormData.responseType, name],\n        }));\n        setShowCustomOptions(true); // Show additional options when \"custom\" is checked\n      } else if (name === \"image\") {\n        setFormData((prevFormData) => ({\n          ...prevFormData,\n          responseType: [...prevFormData.responseType, name],\n        }));\n        setpop1(true); // Show image options when \"image\" is checked\n      } else {\n        setFormData((prevFormData) => ({\n          ...prevFormData,\n          responseType: [...prevFormData.responseType, name],\n        }));\n      }\n    } else {\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        responseType: prevFormData.responseType.filter((type) => type !== name),\n      }));\n\n      if (name === \"custom\") {\n        setShowCustomOptions(false); // Hide additional options when \"custom\" is unchecked\n      } else if (name === \"image\") {\n        setpop1(false); // Hide image options when \"image\" is unchecked\n      }\n    }\n    if (\n      name !== \"custom\" &&\n      name !== \"image\" &&\n      name !== \"yesno\" &&\n      name !== \"remarkbox\" // Add more conditions for other responseType fields if needed\n    ) {\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        [name]: value,\n      }));\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      setValidated(true);\n    } else {\n      console.log(\"form is valid and good to ship\");\n\n      // asking for confirmation here\n      setVisible(true);\n    }\n  };\n\n  // useEffect(() => {\n  //   if (showCustomOptions === false) {\n  //     setFormData((prevFormData) => ({\n  //       ...prevFormData,\n  //       responsetypeCustomField: [],\n  //     }));\n  //   }\n  // }, [showCustomOptions]);\n\n  const handleFormSubmission = async () => {\n    console.log(formData);\n    const response = await axios.post(\n      \"http://18.118.42.224:3001/api/v1/aadat\",\n\n      {\n        name: formData.name,\n        category: formData.category,\n        responseType: formData.responseType,\n        customField: formData.customField,\n        isSurat: formData.isSurat,\n        isRemark: formData.isRemark,\n        isImageUpload: formData.isImageUpload,\n        applicableTo: formData.applicableTo,\n        isCompulsory: formData.isCompulsory,\n        startDate: formData.startDate,\n        endDate: formData.endDate,\n        repetation: formData.repetation,\n        repeatDays: formData.repeatDays,\n        class: formData.class,\n        responsetypeCustomField: formData.responsetypeCustomField,\n        repeatDays: formData.repeatDays,\n        repeatMonths: formData.repeatMonths,\n        repeatDateForMonth: formData.repeatDateForMonth,\n        repeatDateForYear: formData.repeatDateForYear,\n        customDate: formData.customDate,\n        isSurat: false,\n      },\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    // retrieving all the students to make a new aadatData instance\n    const res = await axios.get(\"http://18.118.42.224:3001/api/v1/users\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      params: {\n        role: \"student\",\n        class: formData.class,\n      },\n    });\n\n    // making aadatData model instance\n\n    setVisible(false);\n    console.log(response);\n    resetData();\n  };\n\n  const resetData = () => {\n    setValidated(false);\n    setFormData({\n      name: \"\",\n      category: \"\",\n      responseType: [],\n      customField: [\n        {\n          fieldTitle: \"\",\n          fieldType: \"\",\n          options: [\"\", \"\"],\n        },\n      ],\n      isSurat: \"\",\n      isRemark: \"\",\n      isImageUpload: \"\",\n      applicableTo: \"\",\n      isCompulsory: \"\",\n      startDate: new Date(),\n      endDate: \"\",\n      class: \"\",\n      repetation: \"\",\n      isImageUpload: \"\",\n      repeatDays: [],\n      responsetypeCustomField: [\n        {\n          cusresTitle: \"\",\n          cusresType: \"\",\n          cusresValue: [\"\"],\n        },\n      ],\n      repeatDays: [],\n      repeatMonths: [],\n      repeatDateForMonth: new Date(),\n      repeatDateForYear: new Date(),\n      customDate: new Date(),\n    });\n  };\n\n  //   getting categories\n  const [getCats, setgetCats] = useState([]);\n\n  useEffect(() => {\n    const getCats = async () => {\n      try {\n        const response = await axios.get(\n          \"http://18.118.42.224:3001/api/v1/categories\",\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n\n        console.log(response.data.data.docs);\n        setgetCats(response.data.data.docs);\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n      }\n    };\n    getCats();\n  }, []);\n\n  const [fieldType, setFieldType] = useState(\"dropdown\");\n\n  // adding more data\n  const renderCustomField = () => {\n    switch (fieldType) {\n      case \"dropdown\":\n        return (\n          <div className=\"pt-2\">\n            <CCardTitle className=\"text-center\">Custom field</CCardTitle>\n            <CFormInput\n              type=\"text\"\n              id=\"labelName\"\n              label=\"Label name\"\n              placeholder=\"Please enter name\"\n            />\n            <div className=\"pt-3\">\n              <CFormSelect\n                id=\"validationCustom07\"\n                label=\"Field Name\"\n                name=\"fieldName\"\n              >\n                <option selected=\"\" disabled=\"\" value=\"\">\n                  Choose...\n                </option>\n                <option>Dropdown</option>\n                <option>Checkbox</option>\n              </CFormSelect>\n              <div className=\"pt-3\">\n                <CFormInput\n                  type=\"text\"\n                  id=\"labelNameee\"\n                  placeholder=\"value 1\"\n                />\n              </div>\n              <div className=\"pt-3\">\n                <CFormInput type=\"text\" id=\"labelNamee\" placeholder=\"value 2\" />\n              </div>\n            </div>\n          </div>\n        );\n      // Add more cases for other field types\n      default:\n        return null;\n    }\n  };\n\n  const addCustomField = () => {\n    setFormData({\n      ...formData,\n      customField: [\n        ...formData.customField,\n        {\n          fieldTitle: \"\",\n          fieldType: \"\",\n          options: [\"\", \"\"],\n        },\n      ],\n    });\n  };\n\n  const handleCustomFieldChange = (index, fieldKey, value) => {\n    setFormData((prevFormData) => {\n      const updatedFormData = { ...prevFormData };\n      const updatedCustomField = [...updatedFormData.customField];\n\n      // Update the specific field based on the index\n      const updatedField = { ...updatedCustomField[index] };\n\n      if (fieldKey === \"labelName\") {\n        updatedField.fieldTitle = value;\n      } else if (fieldKey === \"fieldName\") {\n        updatedField.fieldType = value;\n      } else if (fieldKey.startsWith(\"option\")) {\n        // Handling options\n        const optionIndex = parseInt(fieldKey.replace(\"option\", \"\"), 10) - 1;\n\n        // Ensure options array exists before assigning values\n        if (!updatedField.options) {\n          updatedField.options = [];\n        }\n\n        updatedField.options[optionIndex] = value;\n      }\n\n      updatedCustomField[index] = updatedField;\n      updatedFormData.customField = updatedCustomField;\n\n      return updatedFormData;\n    });\n  };\n\n  // Function to remove a custom field by index\n  const removeCustomField = (indexToRemove) => {\n    const updatedCustomFields = formData.customField.filter(\n      (_, index) => index !== indexToRemove\n    );\n    setFormData({ ...formData, customField: updatedCustomFields });\n  };\n\n  const addMoreOptions = (index) => {\n    const updatedCustomField = [...formData.customField];\n\n    // Check if options array exists, if not, initialize it\n    if (!updatedCustomField[index].options) {\n      updatedCustomField[index].options = [];\n    }\n\n    updatedCustomField[index].options.push(\"\"); // Push an empty string for a new option\n\n    setFormData({\n      ...formData,\n      customField: updatedCustomField,\n    });\n  };\n  const addMoreOptionsRes = () => {\n    const updatedCustomField = [...formData.responsetypeCustomField];\n\n    // Check if options array exists, if not, initialize it\n    if (!updatedCustomField[0].cusresValue) {\n      updatedCustomField[0].cusresValue = [];\n    }\n\n    updatedCustomField[0].cusresValue.push(\"\"); // Push an empty string for a new option\n\n    setFormData({\n      ...formData,\n      responsetypeCustomField: updatedCustomField,\n    });\n  };\n\n  const handleOptionChange = (fieldIndex, optionIndex, value) => {\n    const updatedCustomField = [...formData.customField];\n\n    updatedCustomField[fieldIndex].options[optionIndex] = value;\n\n    setFormData({\n      ...formData,\n      customField: updatedCustomField,\n    });\n  };\n\n  // repetation days\n  const handleRepChange = (e) => {\n    const { name, checked } = e.target;\n    let updatedRepeatDays = [...formData.repeatDays]; // Create a copy of repeatDays array\n\n    if (checked) {\n      // If checkbox is checked, add the day to the array\n      updatedRepeatDays = [...updatedRepeatDays, name];\n    } else {\n      // If checkbox is unchecked, remove the day from the array\n      updatedRepeatDays = updatedRepeatDays.filter((day) => day !== name);\n    }\n\n    // Update the state with the new array of selected days\n    setFormData({\n      ...formData,\n      repeatDays: updatedRepeatDays,\n    });\n  };\n\n  // repeat months\n  const handleRepmonthChange = (e) => {\n    const { name, checked } = e.target;\n    let updatedRepeatDays = [...formData.repeatMonths]; // Create a copy of repeatDays array\n\n    if (checked) {\n      // If checkbox is checked, add the day to the array\n      updatedRepeatDays = [...updatedRepeatDays, name];\n    } else {\n      // If checkbox is unchecked, remove the day from the array\n      updatedRepeatDays = updatedRepeatDays.filter((day) => day !== name);\n    }\n\n    // Update the state with the new array of selected days\n    setFormData({\n      ...formData,\n      repeatMonths: updatedRepeatDays,\n    });\n  };\n\n  return (\n    <>\n      <CContainer fluid className=\"container overflow-auto\">\n        {/* modal */}\n        <CModal\n          backdrop=\"static\"\n          visible={visible}\n          onClose={() => setVisible(false)}\n          aria-labelledby=\"StaticBackdropExampleLabel\"\n        >\n          <CModalHeader>\n            <CModalTitle id=\"StaticBackdropExampleLabel\">\n              Form submission\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>Are you sure you wish to sumbit this form?</CModalBody>\n          <CModalFooter>\n            <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n              Close\n            </CButton>\n            <CButton color=\"primary\" onClick={handleFormSubmission}>\n              Yes!\n            </CButton>\n          </CModalFooter>\n        </CModal>\n        <div className=\"display-5 text-center pb-3 font-weight-bold\">Adaat</div>\n        <CContainer fluid>\n          <div className=\"display-6 text-center pb-3 border-bottom\">\n            Adaat information\n          </div>\n          <CForm\n            className=\"row needs-validation\"\n            // style={{\n            //   maxWidth: \"100%\",\n            //   margin: \"0px\",\n            //   maxHeight: \"100%\",\n            //   padding: \"0px\",\n            // }}\n            noValidate\n            validated={validated}\n            onSubmit={handleSubmit}\n          >\n            <CRow>\n              <CCol\n                md={6}\n                className=\"d-flex flex-column align-items-center col1\"\n              >\n                <CCol className=\"pt-4\">\n                  <CFormSelect\n                    aria-describedby=\"validationCustom07Feedback\"\n                    feedbackInvalid=\"Please select a valid Mentor.\"\n                    id=\"validationCustom07\"\n                    label=\"Categories\"\n                    name=\"category\"\n                    required\n                    value={formData.category}\n                    onChange={handleChange}\n                  >\n                    <option selected=\"\" disabled=\"\" value=\"\">\n                      Choose...\n                    </option>\n                    {getCats.map((cat) => {\n                      return <option value={cat._id}>{cat.name}</option>;\n                    })}\n                  </CFormSelect>\n                </CCol>\n\n                <CCol className=\"pt-4\">\n                  <CFormInput\n                    type=\"text\"\n                    feedbackValid=\"Looks good!\"\n                    id=\"validationCustom01\"\n                    label=\"Adaat name\"\n                    placeholder=\"Please enter adaat name\"\n                    name=\"name\"\n                    required\n                    value={formData.name}\n                    onChange={handleChange}\n                  />\n                </CCol>\n                <CCol className=\"pt-4\">\n                  <CRow>\n                    <CCol md={6}>\n                      <p>Response type:</p>\n                    </CCol>\n\n                    <CCol md={6}>\n                      <CFormCheck\n                        id=\"flexCheckDefaultYesNo\"\n                        label=\"yes/no tab\"\n                        name=\"yesno\"\n                        checked={formData.responseType.includes(\"yesno\")}\n                        onChange={handleChange}\n                      />\n\n                      <CFormCheck\n                        id=\"flexCheckDefaultCustom\"\n                        label=\"custom\"\n                        name=\"custom\"\n                        checked={formData.responseType.includes(\"custom\")}\n                        onChange={handleChange}\n                      />\n                      {showCustomOptions &&\n                        formData.responsetypeCustomField.map((field, index) => (\n                          <div className=\" card p-2 mt-2\">\n                            <CFormInput\n                              type=\"text\"\n                              id=\"labelName\"\n                              placeholder=\"Please enter name\"\n                              onChange={(e) => {\n                                setFormData((prevFormData) => ({\n                                  ...prevFormData,\n                                  responsetypeCustomField: [\n                                    {\n                                      ...prevFormData.responsetypeCustomField[\n                                        index\n                                      ],\n                                      cusresTitle: e.target.value,\n                                    },\n                                  ],\n                                }));\n                              }}\n                            />\n                            <div className=\"d-flex flex-column p-2\">\n                              <CFormCheck\n                                type=\"radio\"\n                                name=\"exampleRadios\"\n                                id=\"exampleRadios21\"\n                                value=\"male\"\n                                label=\"for boys\"\n                                checked={\n                                  formData.responsetypeCustomField[index]\n                                    .cusresType === \"male\"\n                                }\n                                onChange={(e) => {\n                                  setFormData((prevFormData) => ({\n                                    ...prevFormData,\n                                    responsetypeCustomField: [\n                                      {\n                                        ...prevFormData.responsetypeCustomField[\n                                          index\n                                        ],\n                                        cusresType: e.target.value,\n                                      },\n                                    ],\n                                  }));\n                                }}\n                              />\n                              <CFormCheck\n                                type=\"radio\"\n                                name=\"exampleRadios\"\n                                id=\"exampleRadios22\"\n                                value=\"female\"\n                                label=\"for girls\"\n                                checked={\n                                  formData.responsetypeCustomField[index]\n                                    .cusresType === \"female\"\n                                }\n                                onChange={(e) => {\n                                  setFormData((prevFormData) => ({\n                                    ...prevFormData,\n                                    responsetypeCustomField: [\n                                      {\n                                        ...prevFormData.responsetypeCustomField[\n                                          index\n                                        ],\n                                        cusresType: e.target.value,\n                                      },\n                                    ],\n                                  }));\n                                }}\n                              />\n                              <CFormCheck\n                                type=\"radio\"\n                                name=\"exampleRadios\"\n                                id=\"exampleRadios23\"\n                                value=\"both\"\n                                label=\"for both\"\n                                checked={\n                                  formData.responsetypeCustomField[index]\n                                    .cusresType === \"both\"\n                                }\n                                onChange={(e) => {\n                                  setFormData((prevFormData) => ({\n                                    ...prevFormData,\n                                    responsetypeCustomField: [\n                                      {\n                                        ...prevFormData.responsetypeCustomField[\n                                          index\n                                        ],\n                                        cusresType: e.target.value,\n                                      },\n                                    ],\n                                  }));\n                                }}\n                              />\n\n                              {formData.responsetypeCustomField[\n                                index\n                              ].cusresValue.map((option, optionIndex) => (\n                                <div className=\"pt-3\" key={optionIndex}>\n                                  <CFormInput\n                                    type=\"text\"\n                                    placeholder={`value ${optionIndex + 1}`}\n                                    value={option}\n                                    onChange={(e) => {\n                                      const updatedresponsetypeCustomField = [\n                                        ...formData.responsetypeCustomField,\n                                      ];\n\n                                      updatedresponsetypeCustomField[\n                                        index\n                                      ].cusresValue[optionIndex] =\n                                        e.target.value;\n\n                                      setFormData({\n                                        ...formData,\n                                        responsetypeCustomField:\n                                          updatedresponsetypeCustomField,\n                                      });\n                                    }}\n                                  />\n                                </div>\n                              ))}\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-sm btn-primary float-right\"\n                                onClick={() => addMoreOptionsRes()}\n                              >\n                                add more\n                              </button>\n                            </div>\n                          </div>\n                        ))}\n\n                      <CFormCheck\n                        id=\"flexCheckDefaultRemarkBox\"\n                        label=\"remark box\"\n                        name=\"remarkbox\"\n                        checked={formData.responseType.includes(\"remarkbox\")}\n                        onChange={handleChange}\n                      />\n\n                      <CFormCheck\n                        id=\"flexCheckDefaultImage\"\n                        label=\"image\"\n                        name=\"image\"\n                        checked={formData.responseType.includes(\"image\")}\n                        onChange={handleChange}\n                        className=\"mb-2\"\n                      />\n\n                      {pop1 && (\n                        <div className=\"card\">\n                          <CFormSelect\n                            aria-describedby=\"yo\"\n                            feedbackInvalid=\"Please select number.\"\n                            id=\"imageNo\"\n                            name=\"imageNo\"\n                            onChange={(event) => {\n                              const selectedValue = event.target.value;\n                              setFormData((prevFormData) => ({\n                                ...prevFormData,\n                                isImageUpload: selectedValue,\n                              }));\n                            }}\n                          >\n                            <option selected=\"\" disabled=\"\" value=\"\">\n                              Please select number\n                            </option>\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                          </CFormSelect>\n                        </div>\n                      )}\n                    </CCol>\n                  </CRow>\n                </CCol>\n                <CCol className=\"pt-4\">\n                  <CRow>\n                    <CCol md={6}>\n                      <p>Applicable for:</p>\n                    </CCol>\n                    <CCol md={6}>\n                      <CFormCheck\n                        id=\"flexCheckDefault\"\n                        label=\"boys only\"\n                        name=\"male\"\n                        checked={\n                          formData.applicableTo === \"male\" ? true : false\n                        }\n                        onChange={handleChange2}\n                      />\n                      <CFormCheck\n                        id=\"flexCheckDefault\"\n                        label=\"girls only\"\n                        name=\"female\"\n                        checked={\n                          formData.applicableTo === \"female\" ? true : false\n                        }\n                        onChange={handleChange2}\n                      />\n                      <CFormCheck\n                        id=\"flexCheckDefault\"\n                        label=\"boys and girls\"\n                        name=\"both\"\n                        checked={\n                          formData.applicableTo === \"both\" ? true : false\n                        }\n                        onChange={handleChange2}\n                      />\n                    </CCol>\n                  </CRow>\n                </CCol>\n\n                <CCol className=\"pt-4\">\n                  <CFormSelect\n                    aria-describedby=\"validationCustom07Feedback\"\n                    feedbackInvalid=\"Please select a valid Mentor.\"\n                    id=\"validationCustom07\"\n                    label=\"Class\"\n                    name=\"class\"\n                    required\n                    value={formData.class}\n                    onChange={handleChange}\n                  >\n                    <option selected=\"\" disabled=\"\" value=\"\">\n                      Choose...\n                    </option>\n                    <option>Grade 1</option>\n                    <option>Grade 2</option>\n                    <option>Grade 3</option>\n                  </CFormSelect>\n                </CCol>\n                <CCol className=\"pt-4\">\n                  <CRow>\n                    <CCol md={6}>\n                      <p>Compulsary?</p>\n                    </CCol>\n                    <CCol md={6}>\n                      <CFormCheck\n                        id=\"flexCheckDefault\"\n                        label=\"yes\"\n                        name=\"isCompulsoryYes\"\n                        checked={formData.isCompulsory === true ? true : false}\n                        onChange={handleChange2}\n                      />\n                      <CFormCheck\n                        id=\"flexCheckDefault\"\n                        label=\"no\"\n                        name=\"isCompulsoryNo\"\n                        checked={formData.isCompulsory === false ? true : false}\n                        onChange={handleChange2}\n                      />\n                    </CCol>\n                  </CRow>\n                </CCol>\n              </CCol>\n\n              <CCol\n                md={6}\n                className=\"d-flex flex-column align-items-center col2\"\n              >\n                <CCol className=\"pt-4\">\n                  <CCard>\n                    <CCardBody>\n                      {/* <CCardTitle className=\"text-center\">\n                        Custom field\n                      </CCardTitle>\n                      <CFormInput\n                        type=\"text\"\n                        id=\"labelName\"\n                        label=\"Label name\"\n                        placeholder=\"Please enter name\"\n                      />\n                      <div className=\"pt-3\">\n                        <CFormSelect\n                          id=\"validationCustom07\"\n                          label=\"Field Name\"\n                          name=\"fieldName\"\n                          onChange={(e) => {}}\n                        >\n                          <option selected=\"\" disabled=\"\" value=\"\">\n                            Choose...\n                          </option>\n                          <option>Dropdown</option>\n                          <option>Checkbox</option>\n                        </CFormSelect>\n                        <div className=\"pt-3\">\n                          <CFormInput\n                            type=\"text\"\n                            id=\"labelNameee\"\n                            placeholder=\"value 1\"\n                          />\n                        </div>\n                        <div className=\"pt-3\">\n                          <CFormInput\n                            type=\"text\"\n                            id=\"labelNamee\"\n                            placeholder=\"value 2\"\n                          />\n                        </div> */}\n                      {formData.customField.map((field, index) => (\n                        <div key={index} className=\"pt-3\">\n                          <CCardTitle className=\"text-center\">\n                            Custom field\n                          </CCardTitle>\n                          <CFormInput\n                            type=\"text\"\n                            id=\"labelName\"\n                            label=\"Label name\"\n                            placeholder=\"Please enter name\"\n                            value={field.fieldTitle}\n                            onChange={(e) =>\n                              handleCustomFieldChange(\n                                index,\n                                \"labelName\",\n                                e.target.value\n                              )\n                            }\n                          />\n                          <CFormSelect\n                            id=\"validationCustom07\"\n                            label=\"Field Name\"\n                            name=\"fieldName\"\n                            value={field.fieldType}\n                            onChange={(e) =>\n                              handleCustomFieldChange(\n                                index,\n                                \"fieldName\",\n                                e.target.value\n                              )\n                            }\n                          >\n                            <option selected=\"\" disabled=\"\" value=\"\">\n                              Choose...\n                            </option>\n                            <option>dropdown</option>\n                            <option>checkbox</option>\n                          </CFormSelect>\n                          <div className=\"pt-3\">\n                            {/* <CFormInput\n                              type=\"text\"\n                              id=\"value1option\"\n                              placeholder=\"value 1\"\n                              onChange={(e) =>\n                                handleCustomFieldChange(\n                                  index,\n                                  \"option1\",\n                                  e.target.value\n                                )\n                              }\n                            /> */}\n                            {field.options.map((option, optionIndex) => (\n                              <div className=\"pt-3\" key={optionIndex}>\n                                <CFormInput\n                                  type=\"text\"\n                                  placeholder={`value ${optionIndex + 1}`}\n                                  value={option}\n                                  onChange={(e) =>\n                                    handleOptionChange(\n                                      index,\n                                      optionIndex,\n                                      e.target.value\n                                    )\n                                  }\n                                />\n                              </div>\n                            ))}\n                          </div>\n                          {/* <div className=\"pt-3\">\n                            <CFormInput\n                              type=\"text\"\n                              id=\"value2option\"\n                              placeholder=\"value 2\"\n                              onChange={(e) =>\n                                handleCustomFieldChange(\n                                  index,\n                                  \"option2\",\n                                  e.target.value\n                                )\n                              }\n                            />\n                          </div> */}\n\n                          <button\n                            className=\"btn btn-sm btn-danger\"\n                            onClick={() => removeCustomField(index)}\n                          >\n                            Remove\n                          </button>\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-sm btn-primary float-right\"\n                            onClick={() => addMoreOptions(index)}\n                          >\n                            add more\n                          </button>\n                        </div>\n                      ))}\n                      <div className=\"pt-2\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-sm btn-dark float-right\"\n                          onClick={addCustomField}\n                        >\n                          +\n                        </button>\n                      </div>\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n                <CCol className=\"\">\n                  <DatePicker\n                    locale=\"sa\"\n                    label=\"Start date\"\n                    name=\"startDate\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    selected={formData.startDate}\n                    popperPlacement=\"top-end\"\n                    onChange={(date) =>\n                      setFormData({\n                        ...formData,\n                        startDate: date,\n                      })\n                    }\n                    customInput={<CustomInput labelName={\"Start date\"} />}\n                  />\n                </CCol>\n                <CCol className=\"\">\n                  <DatePicker\n                    locale=\"sa\"\n                    label=\"End date\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    selected={formData.endDate}\n                    popperPlacement=\"top-end\"\n                    onChange={(date) =>\n                      setFormData({\n                        ...formData,\n                        endDate: date,\n                      })\n                    }\n                    disabled={\n                      formData.repetation && formData.repetation === \"custom\"\n                    }\n                    customInput={<CustomInput labelName={\"End date\"} />}\n                  />\n                </CCol>\n\n                <CCol className=\"pt-4\">\n                  <CFormSelect\n                    aria-describedby=\"validationCustom07Feedback\"\n                    feedbackInvalid=\"Please select a valid Mentor.\"\n                    id=\"validationCustom07\"\n                    label=\"repetition\"\n                    name=\"repetation\"\n                    required\n                    value={formData.repetation}\n                    onChange={handleChange}\n                  >\n                    <option selected=\"\" disabled=\"\" value=\"\">\n                      Choose...\n                    </option>\n                    <option value=\"norepeat\">Does not repeat</option>\n                    <option value=\"daily\">Daily</option>\n                    <option value=\"weekly\">Weekly</option>\n                    <option value=\"monthly\">Monthly</option>\n                    <option value=\"yearly\">Anually</option>\n\n                    <option value=\"custom\">Custom</option>\n                  </CFormSelect>\n                </CCol>\n\n                {formData.repetation === \"monthly\" && (\n                  <CCol className=\"pt-4\">\n                    <DatePicker\n                      locale=\"sa\"\n                      label=\"Repeat day for the month/months\"\n                      dateFormat=\"dd\"\n                      selected={formData.repeatDateForMonth}\n                      popperPlacement=\"top-end\"\n                      onChange={(date) =>\n                        setFormData({\n                          ...formData,\n                          repeatDateForMonth: date,\n                        })\n                      }\n                      customInput={\n                        <CustomInput\n                          labelName={\"Repeat date for the month/months\"}\n                        />\n                      }\n                    />\n                  </CCol>\n                )}\n                {formData.repetation === \"yearly\" && (\n                  <CCol className=\"pt-4\">\n                    <DatePicker\n                      locale=\"sa\"\n                      label=\"Repeat date for the years\"\n                      dateFormat=\"dd/MM\"\n                      selected={formData.repeatDateForYear}\n                      popperPlacement=\"top-end\"\n                      onChange={(date) =>\n                        setFormData({\n                          ...formData,\n                          repeatDateForYear: date,\n                        })\n                      }\n                      customInput={\n                        <CustomInput labelName={\"Repeat date for the years\"} />\n                      }\n                    />\n                  </CCol>\n                )}\n\n                {formData.repetation === \"custom\" && (\n                  <CCol className=\"pt-4\">\n                    <DatePicker\n                      locale=\"sa\"\n                      label=\"Custom Date!\"\n                      dateFormat=\"dd/MM/yyyy\"\n                      selected={formData.customDate}\n                      popperPlacement=\"top-end\"\n                      onChange={(date) =>\n                        setFormData({\n                          ...formData,\n                          customDate: date,\n                        })\n                      }\n                      customInput={\n                        <CustomInput labelName={\"Customized Date!\"} />\n                      }\n                    />\n                  </CCol>\n                )}\n\n                <CCol className=\"pt-4\">\n                  <CCol md={6}>\n                    <p>Repeat days:</p>\n                  </CCol>\n\n                  <CCol md={6}>\n                    <CFormCheck\n                      id=\"flexCheckDefaultSun\"\n                      label=\"Sunday\"\n                      name=\"sunday\"\n                      onChange={handleRepChange}\n                      checked={formData.repeatDays.includes(\"sunday\")}\n                      disabled={\n                        formData.repetation &&\n                        (formData.repetation === \"daily\" ||\n                          formData.repetation === \"monthly\" ||\n                          formData.repetation === \"yearly\" ||\n                          formData.repetation === \"custom\")\n                          ? true\n                          : false\n                      }\n                    />\n                    <CFormCheck\n                      id=\"flexCheckDefaultMon\"\n                      label=\"Monday\"\n                      name=\"monday\"\n                      onChange={handleRepChange}\n                      checked={formData.repeatDays.includes(\"monday\")}\n                      disabled={\n                        formData.repetation &&\n                        (formData.repetation === \"daily\" ||\n                          formData.repetation === \"monthly\" ||\n                          formData.repetation === \"yearly\" ||\n                          formData.repetation === \"custom\")\n                          ? true\n                          : false\n                      }\n                    />\n                    <CFormCheck\n                      id=\"flexCheckDefaultTue\"\n                      label=\"Tuesday\"\n                      name=\"tuesday\"\n                      onChange={handleRepChange}\n                      checked={formData.repeatDays.includes(\"tuesday\")}\n                      disabled={\n                        formData.repetation &&\n                        (formData.repetation === \"daily\" ||\n                          formData.repetation === \"monthly\" ||\n                          formData.repetation === \"yearly\" ||\n                          formData.repetation === \"custom\")\n                          ? true\n                          : false\n                      }\n                    />\n                    <CFormCheck\n                      id=\"flexCheckDefaultSWed\"\n                      label=\"Wednesday\"\n                      name=\"wednesday\"\n                      onChange={handleRepChange}\n                      checked={formData.repeatDays.includes(\"wednesday\")}\n                      disabled={\n                        formData.repetation &&\n                        (formData.repetation === \"daily\" ||\n                          formData.repetation === \"monthly\" ||\n                          formData.repetation === \"yearly\" ||\n                          formData.repetation === \"custom\")\n                          ? true\n                          : false\n                      }\n                    />\n                    <CFormCheck\n                      id=\"flexCheckDefaultThu\"\n                      label=\"Thursday\"\n                      name=\"thursday\"\n                      onChange={handleRepChange}\n                      checked={formData.repeatDays.includes(\"thursday\")}\n                      disabled={\n                        formData.repetation &&\n                        (formData.repetation === \"daily\" ||\n                          formData.repetation === \"monthly\" ||\n                          formData.repetation === \"yearly\" ||\n                          formData.repetation === \"custom\")\n                          ? true\n                          : false\n                      }\n                    />\n                    <CFormCheck\n                      id=\"flexCheckDefaultFri\"\n                      label=\"Friday\"\n                      name=\"friday\"\n                      onChange={handleRepChange}\n                      checked={formData.repeatDays.includes(\"friday\")}\n                      disabled={\n                        formData.repetation &&\n                        (formData.repetation === \"daily\" ||\n                          formData.repetation === \"monthly\" ||\n                          formData.repetation === \"yearly\" ||\n                          formData.repetation === \"custom\")\n                          ? true\n                          : false\n                      }\n                    />\n                    <CFormCheck\n                      id=\"flexCheckDefaultSat\"\n                      label=\"Saturday\"\n                      name=\"saturday\"\n                      onChange={handleRepChange}\n                      checked={formData.repeatDays.includes(\"saturday\")}\n                      disabled={\n                        formData.repetation &&\n                        (formData.repetation === \"daily\" ||\n                          formData.repetation === \"monthly\" ||\n                          formData.repetation === \"yearly\" ||\n                          formData.repetation === \"custom\")\n                          ? true\n                          : false\n                      }\n                    />\n                  </CCol>\n                </CCol>\n                <CCol className=\"pt-4\">\n                  <CCol md={6}>\n                    <p>Repeat months:</p>\n                  </CCol>\n\n                  <CCol md={6}>\n                    <CRow>\n                      <CCol md={6}>\n                        <CFormCheck\n                          id=\"flexCheckDefaultSun\"\n                          label=\"January\"\n                          name=\"january\"\n                          onChange={handleRepmonthChange}\n                          checked={formData.repeatMonths.includes(\"january\")}\n                          disabled={\n                            formData.repetation &&\n                            formData.repetation === \"custom\"\n                          }\n                        />\n                        <CFormCheck\n                          id=\"flexCheckDefaultSun\"\n                          label=\"February\"\n                          name=\"february\"\n                          onChange={handleRepmonthChange}\n                          checked={formData.repeatMonths.includes(\"february\")}\n                          disabled={\n                            formData.repetation &&\n                            formData.repetation === \"custom\"\n                          }\n                        />\n                        <CFormCheck\n                          id=\"flexCheckDefaultSun\"\n                          label=\"March\"\n                          name=\"march\"\n                          onChange={handleRepmonthChange}\n                          checked={formData.repeatMonths.includes(\"march\")}\n                          disabled={\n                            formData.repetation &&\n                            formData.repetation === \"custom\"\n                          }\n                        />\n                        <CFormCheck\n                          id=\"flexCheckDefaultSun\"\n                          label=\"April\"\n                          name=\"april\"\n                          onChange={handleRepmonthChange}\n                          checked={formData.repeatMonths.includes(\"april\")}\n                          disabled={\n                            formData.repetation &&\n                            formData.repetation === \"custom\"\n                          }\n                        />\n                        <CFormCheck\n                          id=\"flexCheckDefaultSun\"\n                          label=\"May\"\n                          name=\"may\"\n                          onChange={handleRepmonthChange}\n                          checked={formData.repeatMonths.includes(\"may\")}\n                          disabled={\n                            formData.repetation &&\n                            formData.repetation === \"custom\"\n                          }\n                        />\n                        <CFormCheck\n                          id=\"flexCheckDefaultSun\"\n                          label=\"June\"\n                          name=\"june\"\n                          onChange={handleRepmonthChange}\n                          checked={formData.repeatMonths.includes(\"june\")}\n                          disabled={\n                            formData.repetation &&\n                            formData.repetation === \"custom\"\n                          }\n                        />\n                      </CCol>\n                      <CCol md={6}>\n                        <CFormCheck\n                          id=\"flexCheckDefaultSun\"\n                          label=\"July\"\n                          name=\"july\"\n                          onChange={handleRepmonthChange}\n                          checked={formData.repeatMonths.includes(\"july\")}\n                          disabled={\n                            formData.repetation &&\n                            formData.repetation === \"custom\"\n                          }\n                        />\n                        <CFormCheck\n                          id=\"flexCheckDefaultSun\"\n                          label=\"August\"\n                          name=\"august\"\n                          onChange={handleRepmonthChange}\n                          checked={formData.repeatMonths.includes(\"august\")}\n                          disabled={\n                            formData.repetation &&\n                            formData.repetation === \"custom\"\n                          }\n                        />\n                        <CFormCheck\n                          id=\"flexCheckDefaultSun\"\n                          label=\"September\"\n                          name=\"september\"\n                          onChange={handleRepmonthChange}\n                          checked={formData.repeatMonths.includes(\"september\")}\n                          disabled={\n                            formData.repetation &&\n                            formData.repetation === \"custom\"\n                          }\n                        />\n                        <CFormCheck\n                          id=\"flexCheckDefaultSun\"\n                          label=\"October\"\n                          name=\"october\"\n                          onChange={handleRepmonthChange}\n                          checked={formData.repeatMonths.includes(\"october\")}\n                          disabled={\n                            formData.repetation &&\n                            formData.repetation === \"custom\"\n                          }\n                        />\n                        <CFormCheck\n                          id=\"flexCheckDefaultSun\"\n                          label=\"November\"\n                          name=\"november\"\n                          onChange={handleRepmonthChange}\n                          checked={formData.repeatMonths.includes(\"november\")}\n                          disabled={\n                            formData.repetation &&\n                            formData.repetation === \"custom\"\n                          }\n                        />\n                        <CFormCheck\n                          id=\"flexCheckDefaultSun\"\n                          label=\"December\"\n                          name=\"december\"\n                          onChange={handleRepmonthChange}\n                          checked={formData.repeatMonths.includes(\"december\")}\n                          disabled={\n                            formData.repetation &&\n                            formData.repetation === \"custom\"\n                          }\n                        />\n                      </CCol>\n                    </CRow>\n                  </CCol>\n                </CCol>\n              </CCol>\n            </CRow>\n\n            <div className=\"buttons text-center pt-3\">\n              <CButton color=\"primary\" type=\"submit\">\n                Submit form\n              </CButton>\n\n              <CButton color=\"dark\" type=\"reset\" onClick={resetData}>\n                Reset form\n              </CButton>\n            </div>\n          </CForm>\n        </CContainer>\n      </CContainer>\n    </>\n  );\n}\n\nexport default AddAdaat;\n","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'أقل من ثانية واحدة',\n    two: 'أقل من ثانتين',\n    threeToTen: 'أقل من {{count}} ثواني',\n    other: 'أقل من {{count}} ثانية'\n  },\n  xSeconds: {\n    one: 'ثانية واحدة',\n    two: 'ثانتين',\n    threeToTen: '{{count}} ثواني',\n    other: '{{count}} ثانية'\n  },\n  halfAMinute: 'نصف دقيقة',\n  lessThanXMinutes: {\n    one: 'أقل من دقيقة',\n    two: 'أقل من دقيقتين',\n    threeToTen: 'أقل من {{count}} دقائق',\n    other: 'أقل من {{count}} دقيقة'\n  },\n  xMinutes: {\n    one: 'دقيقة واحدة',\n    two: 'دقيقتين',\n    threeToTen: '{{count}} دقائق',\n    other: '{{count}} دقيقة'\n  },\n  aboutXHours: {\n    one: 'ساعة واحدة تقريباً',\n    two: 'ساعتين تقريباً',\n    threeToTen: '{{count}} ساعات تقريباً',\n    other: '{{count}} ساعة تقريباً'\n  },\n  xHours: {\n    one: 'ساعة واحدة',\n    two: 'ساعتين',\n    threeToTen: '{{count}} ساعات',\n    other: '{{count}} ساعة'\n  },\n  xDays: {\n    one: 'يوم واحد',\n    two: 'يومين',\n    threeToTen: '{{count}} أيام',\n    other: '{{count}} يوم'\n  },\n  aboutXWeeks: {\n    one: 'أسبوع واحد تقريباً',\n    two: 'أسبوعين تقريباً',\n    threeToTen: '{{count}} أسابيع تقريباً',\n    other: '{{count}} أسبوع تقريباً'\n  },\n  xWeeks: {\n    one: 'أسبوع واحد',\n    two: 'أسبوعين',\n    threeToTen: '{{count}} أسابيع',\n    other: '{{count}} أسبوع'\n  },\n  aboutXMonths: {\n    one: 'شهر واحد تقريباً',\n    two: 'شهرين تقريباً',\n    threeToTen: '{{count}} أشهر تقريباً',\n    other: '{{count}} شهر تقريباً'\n  },\n  xMonths: {\n    one: 'شهر واحد',\n    two: 'شهرين',\n    threeToTen: '{{count}} أشهر',\n    other: '{{count}} شهر'\n  },\n  aboutXYears: {\n    one: 'عام واحد تقريباً',\n    two: 'عامين تقريباً',\n    threeToTen: '{{count}} أعوام تقريباً',\n    other: '{{count}} عام تقريباً'\n  },\n  xYears: {\n    one: 'عام واحد',\n    two: 'عامين',\n    threeToTen: '{{count}} أعوام',\n    other: '{{count}} عام'\n  },\n  overXYears: {\n    one: 'أكثر من عام',\n    two: 'أكثر من عامين',\n    threeToTen: 'أكثر من {{count}} أعوام',\n    other: 'أكثر من {{count}} عام'\n  },\n  almostXYears: {\n    one: 'عام واحد تقريباً',\n    two: 'عامين تقريباً',\n    threeToTen: '{{count}} أعوام تقريباً',\n    other: '{{count}} عام تقريباً'\n  }\n};\nvar formatDistance = function formatDistance(token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else if (count === 2) {\n    result = tokenValue.two;\n  } else if (count <= 10) {\n    result = tokenValue.threeToTen.replace('{{count}}', String(count));\n  } else {\n    result = tokenValue.other.replace('{{count}}', String(count));\n  }\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'في خلال ' + result;\n    } else {\n      return 'منذ ' + result;\n    }\n  }\n  return result;\n};\nexport default formatDistance;","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'عند' {{time}}\",\n  long: \"{{date}} 'عند' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'أخر' eeee 'عند' p\",\n  yesterday: \"'أمس عند' p\",\n  today: \"'اليوم عند' p\",\n  tomorrow: \"'غداً عند' p\",\n  nextWeek: \"eeee 'عند' p\",\n  other: 'P'\n};\nvar formatRelative = function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\nexport default formatRelative;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['ق', 'ب'],\n  abbreviated: ['ق.م.', 'ب.م.'],\n  wide: ['قبل الميلاد', 'بعد الميلاد']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['ر1', 'ر2', 'ر3', 'ر4'],\n  wide: ['الربع الأول', 'الربع الثاني', 'الربع الثالث', 'الربع الرابع']\n};\nvar monthValues = {\n  narrow: ['ي', 'ف', 'م', 'أ', 'م', 'ي', 'ي', 'أ', 'س', 'أ', 'ن', 'د'],\n  abbreviated: ['ينا', 'فبر', 'مارس', 'أبريل', 'مايو', 'يونـ', 'يولـ', 'أغسـ', 'سبتـ', 'أكتـ', 'نوفـ', 'ديسـ'],\n  wide: ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر']\n};\nvar dayValues = {\n  narrow: ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n  short: ['أحد', 'اثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة', 'سبت'],\n  abbreviated: ['أحد', 'اثنـ', 'ثلا', 'أربـ', 'خميـ', 'جمعة', 'سبت'],\n  wide: ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'ص',\n    pm: 'م',\n    midnight: 'ن',\n    noon: 'ظ',\n    morning: 'صباحاً',\n    afternoon: 'بعد الظهر',\n    evening: 'مساءاً',\n    night: 'ليلاً'\n  },\n  abbreviated: {\n    am: 'ص',\n    pm: 'م',\n    midnight: 'نصف الليل',\n    noon: 'ظهر',\n    morning: 'صباحاً',\n    afternoon: 'بعد الظهر',\n    evening: 'مساءاً',\n    night: 'ليلاً'\n  },\n  wide: {\n    am: 'ص',\n    pm: 'م',\n    midnight: 'نصف الليل',\n    noon: 'ظهر',\n    morning: 'صباحاً',\n    afternoon: 'بعد الظهر',\n    evening: 'مساءاً',\n    night: 'ليلاً'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'ص',\n    pm: 'م',\n    midnight: 'ن',\n    noon: 'ظ',\n    morning: 'في الصباح',\n    afternoon: 'بعد الظـهر',\n    evening: 'في المساء',\n    night: 'في الليل'\n  },\n  abbreviated: {\n    am: 'ص',\n    pm: 'م',\n    midnight: 'نصف الليل',\n    noon: 'ظهر',\n    morning: 'في الصباح',\n    afternoon: 'بعد الظهر',\n    evening: 'في المساء',\n    night: 'في الليل'\n  },\n  wide: {\n    am: 'ص',\n    pm: 'م',\n    midnight: 'نصف الليل',\n    noon: 'ظهر',\n    morning: 'صباحاً',\n    afternoon: 'بعد الظـهر',\n    evening: 'في المساء',\n    night: 'في الليل'\n  }\n};\nvar ordinalNumber = function ordinalNumber(dirtyNumber) {\n  return String(dirtyNumber);\n};\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary Arabic locale (Sauid Arabic).\n * @language Arabic\n * @iso-639-2 ara\n * @author Dhaifallah Alwadani [@dalwadani]{@link https://github.com/dalwadani}\n */\nvar locale = {\n  code: 'ar-SA',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(ق|ب)/i,\n  abbreviated: /^(ق\\.?\\s?م\\.?|ق\\.?\\s?م\\.?\\s?|a\\.?\\s?d\\.?|c\\.?\\s?)/i,\n  wide: /^(قبل الميلاد|قبل الميلاد|بعد الميلاد|بعد الميلاد)/i\n};\nvar parseEraPatterns = {\n  any: [/^قبل/i, /^بعد/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^ر[1234]/i,\n  wide: /^الربع [1234]/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[يفمأمسند]/i,\n  abbreviated: /^(ين|ف|مار|أب|ماي|يون|يول|أغ|س|أك|ن|د)/i,\n  wide: /^(ين|ف|مار|أب|ماي|يون|يول|أغ|س|أك|ن|د)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^ي/i, /^ف/i, /^م/i, /^أ/i, /^م/i, /^ي/i, /^ي/i, /^أ/i, /^س/i, /^أ/i, /^ن/i, /^د/i],\n  any: [/^ين/i, /^ف/i, /^مار/i, /^أب/i, /^ماي/i, /^يون/i, /^يول/i, /^أغ/i, /^س/i, /^أك/i, /^ن/i, /^د/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[حنثرخجس]/i,\n  short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,\n  abbreviated: /^(أحد|اثن|ثلا|أرب|خمي|جمعة|سبت)/i,\n  wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^ح/i, /^ن/i, /^ث/i, /^ر/i, /^خ/i, /^ج/i, /^س/i],\n  wide: [/^الأحد/i, /^الاثنين/i, /^الثلاثاء/i, /^الأربعاء/i, /^الخميس/i, /^الجمعة/i, /^السبت/i],\n  any: [/^أح/i, /^اث/i, /^ث/i, /^أر/i, /^خ/i, /^ج/i, /^س/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;"],"names":["CustomInput","_ref","value","onClick","labelName","_jsx","CFormInput","type","id","placeholder","label","_useState3","registerLocale","sa","token","localStorage","getItem","_useState","useState","name","category","responseType","customField","fieldTitle","fieldType","options","isSurat","isRemark","isImageUpload","applicableTo","isCompulsory","startDate","Date","endDate","class","repetation","_defineProperty","cusresTitle","cusresType","cusresValue","_useState2","_slicedToArray","formData","setFormData","_useState4","_useState5","showCustomOptions","setShowCustomOptions","_useState6","_useState7","pop1","setpop1","_useState8","_useState9","validated","setValidated","_useState10","_useState11","visible","setVisible","_useState12","_useState13","handleChange2","event","_event$target","target","prevFormData","_objectSpread","handleChange","_event$target2","checked","concat","_toConsumableArray","filter","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","preventDefault","currentTarget","checkValidity","console","log","stop","_x","apply","arguments","handleFormSubmission","_ref3","_callee2","_axios$post","response","_context2","axios","post","repeatDays","responsetypeCustomField","repeatMonths","repeatDateForMonth","repeatDateForYear","customDate","headers","Authorization","sent","get","params","role","resetData","_setFormData","_useState14","_useState15","getCats","setgetCats","useEffect","_ref4","_callee3","_context3","data","docs","t0","error","_useState16","_useState17","handleCustomFieldChange","index","fieldKey","updatedFormData","updatedCustomField","updatedField","startsWith","optionIndex","parseInt","replace","handleRepChange","e","_e$target","updatedRepeatDays","day","handleRepmonthChange","_e$target2","_Fragment","children","_jsxs","CContainer","fluid","className","CModal","backdrop","onClose","CModalHeader","CModalTitle","CModalBody","CModalFooter","CButton","color","CForm","noValidate","onSubmit","CRow","CCol","md","CFormSelect","feedbackInvalid","required","onChange","selected","disabled","map","cat","_id","feedbackValid","CFormCheck","includes","field","option","updatedresponsetypeCustomField","push","addMoreOptionsRes","selectedValue","CCard","CCardBody","CCardTitle","fieldIndex","handleOptionChange","indexToRemove","updatedCustomFields","_","removeCustomField","addMoreOptions","DatePicker","locale","dateFormat","popperPlacement","date","customInput","formatDistanceLocale","lessThanXSeconds","one","two","threeToTen","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","count","result","tokenValue","String","addSuffix","comparison","buildFormatLongFn","formats","full","long","medium","short","defaultWidth","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","_date","_baseDate","_options","ordinalNumber","dirtyNumber","era","buildLocalizeFn","values","narrow","abbreviated","wide","quarter","argumentCallback","month","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","formattingValues","defaultFormattingWidth","code","formatDistance","formatLong","formatRelative","localize","match","buildMatchPatternFn","matchPattern","parsePattern","valueCallback","buildMatchFn","matchPatterns","defaultMatchWidth","parsePatterns","any","defaultParseWidth","weekStartsOn","firstWeekContainsDate"],"sourceRoot":""}