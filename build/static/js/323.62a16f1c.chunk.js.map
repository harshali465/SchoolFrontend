{"version":3,"file":"static/js/323.62a16f1c.chunk.js","mappings":"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","sources":["views/Manageteachers/Teacherlisting.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CForm,\r\n  CFormInput,\r\n  CInputGroup,\r\n  CInputGroupText,\r\n  CFormLabel,\r\n  CFormSelect,\r\n  CFormCheck,\r\n  CFormFeedback,\r\n  CInputFile,\r\n  CRow,\r\n  CContainer,\r\n  CPagination,\r\n  CPaginationItem,\r\n} from \"@coreui/react\";\r\nimport axios from \"axios\";\r\n// imports for modal\r\nimport {\r\n  CModal,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CModalFooter,\r\n} from \"@coreui/react\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\n\r\nfunction StudentTable() {\r\n  const token = localStorage.getItem(\"accessToken\");\r\n  const getUsers = async () => {\r\n    try {\r\n      // const token =\r\n      //   \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NGIzNzQxYTRlOTIyNzU1ZTEzZjUwYSIsImlhdCI6MTY5OTQzMjE5NiwiZXhwIjoxNzAyMDI0MTk2fQ.Gn_VwncOvLdq9728FXSIESpmSw8J7Nu5d0AyezbwoOU\";\r\n\r\n      const response = await axios.get(\r\n        \"http://18.118.42.224:3001/api/v1/users\",\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          params: {\r\n            role: \"teacher\",\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log(response);\r\n      setdummystudents(response.data.data.docs);\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const navigate = useNavigate();\r\n  const [dummystudents, setdummystudents] = useState([]);\r\n  const [students, setStudents] = useState([]);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [collecIds, setcollecIds] = useState([]);\r\n\r\n  const toggleSelectAll = () => {\r\n    setcollecIds([]);\r\n\r\n    if (!selectAll) {\r\n      const selectedIds = dummystudents.map((student) => student._id);\r\n      setcollecIds(selectedIds);\r\n    } else {\r\n      setcollecIds([]);\r\n    }\r\n    // setting frontend to checked\r\n    setSelectAll(!selectAll);\r\n    setdummystudents((prevStudents) =>\r\n      prevStudents.map((student) => ({ ...student, selected: !selectAll }))\r\n    );\r\n  };\r\n\r\n  const handleSelect = async (index) => {\r\n    const updatedStudents = [...dummystudents];\r\n    if (updatedStudents[index].selected === false) {\r\n      setcollecIds([...collecIds, updatedStudents[index]._id]);\r\n    } else {\r\n      setcollecIds((prevCollecIds) =>\r\n        prevCollecIds.filter((id) => id !== updatedStudents[index]._id)\r\n      );\r\n    }\r\n\r\n    updatedStudents[index].selected = !updatedStudents[index].selected;\r\n    setdummystudents(updatedStudents);\r\n  };\r\n\r\n  const markActive = async () => {\r\n    // const token =\r\n    //   \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NGIzNzQxYTRlOTIyNzU1ZTEzZjUwYSIsImlhdCI6MTY5OTQzMjE5NiwiZXhwIjoxNzAyMDI0MTk2fQ.Gn_VwncOvLdq9728FXSIESpmSw8J7Nu5d0AyezbwoOU\";\r\n\r\n    try {\r\n      const response = await axios.patch(\r\n        \"http://18.118.42.224:3001/api/v1/users/student\",\r\n        {\r\n          ids: collecIds,\r\n          active: true,\r\n        },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n\r\n    const updatedStudents = dummystudents.map((student) =>\r\n      student.selected ? { ...student, active: true } : student\r\n    );\r\n    setdummystudents(updatedStudents);\r\n  };\r\n\r\n  const markInactive = async () => {\r\n    // const token =\r\n    //   \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NGIzNzQxYTRlOTIyNzU1ZTEzZjUwYSIsImlhdCI6MTY5OTQzMjE5NiwiZXhwIjoxNzAyMDI0MTk2fQ.Gn_VwncOvLdq9728FXSIESpmSw8J7Nu5d0AyezbwoOU\";\r\n\r\n    try {\r\n      const response = await axios.patch(\r\n        \"http://18.118.42.224:3001/api/v1/users/student\",\r\n        {\r\n          ids: collecIds,\r\n          active: false,\r\n        },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    const updatedStudents = dummystudents.map((student) =>\r\n      student.selected ? { ...student, active: false } : student\r\n    );\r\n    setdummystudents(updatedStudents);\r\n  };\r\n\r\n  const deleteSelected = async () => {\r\n    // const token =\r\n    //   \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NGIzNzQxYTRlOTIyNzU1ZTEzZjUwYSIsImlhdCI6MTY5OTQzMjE5NiwiZXhwIjoxNzAyMDI0MTk2fQ.Gn_VwncOvLdq9728FXSIESpmSw8J7Nu5d0AyezbwoOU\";\r\n\r\n    try {\r\n      const response = await axios.delete(\r\n        \"http://18.118.42.224:3001/api/v1/users/student\",\r\n        {\r\n          data: { ids: collecIds },\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      setVisible(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    getUsers();\r\n    // const updatedStudents =\r\n    // dummystudents.filter(\r\n    //   (student) => !student.selected\r\n    // );\r\n    // setdummystudents(updatedStudents);\r\n  };\r\n\r\n  const editStudent = (studentid) => {\r\n    navigate(\"/editteacher\", {\r\n      state: { studentid: studentid },\r\n    });\r\n  };\r\n\r\n  //   filter states\r\n  const [filterKeyword, setFilterKeyword] = useState(\"\");\r\n  const [filterClass, setFilterClass] = useState(\"\");\r\n  const [filterDivision, setFilterDivision] = useState(\"\");\r\n  const [filterSection, setfilterSection] = useState(\"\");\r\n\r\n  //   function calling in the table\r\n  const applyFilters = (student) => {\r\n    // Apply filters to the student based on filter values\r\n    return (\r\n      student.firstName.toLowerCase().includes(filterKeyword.toLowerCase()) &&\r\n      //   (filterClass === \"\" || student.class === filterClass)\r\n      student.class.toLowerCase().includes(filterClass.toLowerCase()) &&\r\n      (filterDivision === \"\" || student.teachertype === filterDivision) &&\r\n      (filterSection === \"\" || student.section === filterSection)\r\n    );\r\n  };\r\n\r\n  //   pagination\r\n\r\n  //   const [pageSize] = useState(4);\r\n  const [pageSize, setpageSize] = useState(students.length);\r\n  const [currentPage, setCurrentPage] = useState(1); // Current page, starts at 1\r\n\r\n  const handlePageChange = (newPage) => {\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  // Calculate the range of students to display based on the current page\r\n  const startIndex = (currentPage - 1) * pageSize;\r\n  const endIndex = startIndex + pageSize;\r\n  const displayedStudents = students.slice(startIndex, endIndex);\r\n\r\n  const numPages = Math.ceil(students.length / pageSize);\r\n\r\n  //   exporting to excel sheet\r\n\r\n  const exportToCSV = () => {\r\n    const selectedStudents = dummystudents.filter(\r\n      (student) => student.selected\r\n    );\r\n    const headers = [\"Name\", \"Class\", \"Division\", \"Behavior Points\", \"Status\"];\r\n    const csvData = [headers].concat(\r\n      selectedStudents.map((student) => [\r\n        student.firstName,\r\n        student.class,\r\n        student.division,\r\n        student.behaviousPoints.positivePoints -\r\n          student.behaviousPoints.negativePoints,\r\n        student.active ? \"Active\" : \"Inactive\",\r\n      ])\r\n    );\r\n\r\n    // Convert the data to a CSV string\r\n    const csvContent = csvData.map((row) => row.join(\",\")).join(\"\\n\");\r\n    const blob = new Blob([csvContent], { type: \"text/csv\" });\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    // Create a download link\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"selected_teachers.csv\"; // File name\r\n    a.style.display = \"none\";\r\n    document.body.appendChild(a);\r\n\r\n    a.click(); // Trigger the download\r\n    URL.revokeObjectURL(url); // Release the object URL\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  const redirectto = () => {\r\n    navigate(\"/addteacher\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* modal */}\r\n      <CModal\r\n        backdrop=\"static\"\r\n        visible={visible}\r\n        onClose={() => {\r\n          setVisible(false);\r\n          setcollecIds([]);\r\n        }}\r\n        aria-labelledby=\"StaticBackdropExampleLabel\"\r\n      >\r\n        <CModalHeader>\r\n          <CModalTitle id=\"StaticBackdropExampleLabel\">\r\n            Delete teacher\r\n          </CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          Are you sure you wish to delete the teacher/teachers?\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              setVisible(false);\r\n              setcollecIds([]);\r\n            }}\r\n          >\r\n            Close\r\n          </CButton>\r\n          <CButton color=\"primary\" onClick={() => deleteSelected()}>\r\n            Yes!\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      {/* Filters */}\r\n      <div className=\"mb-2\">\r\n        <div className=\"row pb-5\">\r\n          <div className=\"col-md-6 \">\r\n            <div className=\"display-6 pb-3 float-end\">Teacher listing</div>\r\n          </div>\r\n\r\n          <div className=\"col-md-6 \">\r\n            <button\r\n              className=\"btn btn-primary float-end\"\r\n              onClick={() => {\r\n                redirectto();\r\n              }}\r\n            >\r\n              Add teacher\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {/* filters */}\r\n        <div className=\"filters d-flex justify-content-between\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Search by keyword\"\r\n            value={filterKeyword}\r\n            onChange={(e) => setFilterKeyword(e.target.value)}\r\n          />\r\n          <select\r\n            className=\"form-select\"\r\n            value={filterClass}\r\n            onChange={(e) => setFilterClass(e.target.value)}\r\n          >\r\n            <option value=\"\">Class</option>\r\n            <option>1st</option>\r\n            <option>2nd</option>\r\n            <option>3rd</option>\r\n            <option>4th</option>\r\n            <option>5th</option>\r\n          </select>\r\n          <select\r\n            className=\"form-select\"\r\n            value={filterDivision}\r\n            onChange={(e) => setFilterDivision(e.target.value)}\r\n          >\r\n            <option value=\"\">Type</option>\r\n            <option>Class T</option>\r\n            <option>Assist T</option>\r\n            <option>Subject T</option>\r\n          </select>\r\n          <select\r\n            className=\"form-select\"\r\n            value={filterSection}\r\n            onChange={(e) => setfilterSection(e.target.value)}\r\n          >\r\n            <option value=\"\">Section</option>\r\n            <option>Primary</option>\r\n            <option>Pre Primary</option>\r\n            <option>Secondary</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* buttons for action */}\r\n\r\n      <div className=\"pb-4 flex-wrap\">\r\n        <button className=\"btn btn-primary btn-md \" onClick={markActive}>\r\n          Mark Active\r\n        </button>\r\n        <button className=\"btn btn-dark btn-md \" onClick={markInactive}>\r\n          Mark Inactive\r\n        </button>\r\n        <button\r\n          className=\"btn btn-dark btn-md \"\r\n          onClick={() => {\r\n            setVisible(!visible);\r\n          }}\r\n        >\r\n          Delete Selected\r\n        </button>\r\n        <button\r\n          className=\"btn btn-success btn-md float-end\"\r\n          onClick={exportToCSV}\r\n        >\r\n          Export to Excel\r\n        </button>\r\n      </div>\r\n\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"text-center\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectAll}\r\n                onChange={toggleSelectAll}\r\n              />\r\n            </th>\r\n            <th className=\"text-center\">Name</th>\r\n            <th className=\"text-center\">Type</th>\r\n            <th className=\"text-center\">Class</th>\r\n            <th className=\"text-center\">Behavior Points (G/R)</th>\r\n            <th className=\"text-center\">Status</th>\r\n            <th className=\"text-center\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {dummystudents\r\n            .filter((student) => applyFilters(student))\r\n            .map((student, index) => (\r\n              <tr key={index}>\r\n                <td className=\"text-center align-middle\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={student.selected}\r\n                    onChange={() => handleSelect(index)}\r\n                  />\r\n                </td>\r\n                <td className=\"text-center align-middle\">\r\n                  {student.firstName}\r\n                </td>\r\n                <td className=\"text-center align-middle\">\r\n                  {student.teachertype}\r\n                </td>\r\n                <td className=\"text-center align-middle\">{student.class}</td>\r\n                <td className=\"text-center align-middle\">\r\n                  {student.behaviousPoints.positivePoints}/\r\n                  {student.behaviousPoints.negativePoints}\r\n                </td>\r\n                <td className=\"text-center align-middle\">\r\n                  {student.active ? \"active\" : \"inactive\"}\r\n                </td>\r\n                <td className=\"text-center align-middle\">\r\n                  <button\r\n                    className=\"btn btn-primary btn-md\"\r\n                    onClick={() => {\r\n                      editStudent(student._id);\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-dark btn-md\"\r\n                    onClick={() => {\r\n                      setcollecIds([]);\r\n                      setcollecIds([student._id]);\r\n                      setVisible(true);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <CPagination aria-label=\"Page navigation\">\r\n          <CPaginationItem\r\n            onClick={() => handlePageChange(currentPage - 1)}\r\n            disabled={currentPage === 1}\r\n          >\r\n            Previous\r\n          </CPaginationItem>\r\n          {Array.from({ length: numPages }, (_, i) => (\r\n            <CPaginationItem\r\n              key={i}\r\n              active={currentPage === i + 1}\r\n              onClick={() => handlePageChange(i + 1)}\r\n            >\r\n              {i + 1}\r\n            </CPaginationItem>\r\n          ))}\r\n          <CPaginationItem\r\n            onClick={() => handlePageChange(currentPage + 1)}\r\n            disabled={currentPage === Math.ceil(students.length / pageSize)}\r\n          >\r\n            Next\r\n          </CPaginationItem>\r\n\r\n          <div className=\"d-flex\">\r\n            <CPaginationItem>Entries:</CPaginationItem>\r\n            <CPaginationItem>\r\n              <select\r\n                value={pageSize}\r\n                onChange={(e) => setpageSize(e.target.value)}\r\n              >\r\n                <option value=\"2\">2</option>\r\n                <option value=\"4\">4</option>\r\n                <option value={students.length}>all</option>\r\n                {/* Add more options as needed */}\r\n              </select>\r\n            </CPaginationItem>\r\n          </div>\r\n        </CPagination>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StudentTable;\r\n"],"names":["token","localStorage","getItem","getUsers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","get","headers","Authorization","concat","params","role","sent","console","log","setdummystudents","data","docs","t0","error","stop","apply","arguments","useEffect","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","dummystudents","_useState3","_useState4","students","_useState5","_useState6","visible","setVisible","_useState7","_useState8","selectAll","setSelectAll","_useState9","_useState10","collecIds","setcollecIds","handleSelect","_ref2","_callee2","index","updatedStudents","_context2","_toConsumableArray","selected","_id","prevCollecIds","filter","id","_x","markActive","_ref3","_callee3","_context3","patch","ids","active","map","student","_objectSpread","markInactive","_ref4","_callee4","_context4","deleteSelected","_ref5","_callee5","_context5","delete","_useState11","_useState12","filterKeyword","setFilterKeyword","_useState13","_useState14","filterClass","setFilterClass","_useState15","_useState16","filterDivision","setFilterDivision","_useState17","_useState18","filterSection","setfilterSection","_useState19","length","_useState20","pageSize","setpageSize","_useState21","_useState22","currentPage","setCurrentPage","handlePageChange","newPage","startIndex","endIndex","numPages","slice","Math","ceil","_jsxs","children","CModal","backdrop","onClose","_jsx","CModalHeader","CModalTitle","CModalBody","CModalFooter","CButton","color","onClick","className","type","placeholder","value","onChange","e","target","selectedStudents","csvContent","firstName","class","division","behaviousPoints","positivePoints","negativePoints","row","join","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","style","display","body","appendChild","click","revokeObjectURL","removeChild","checked","selectedIds","prevStudents","toLowerCase","includes","teachertype","section","applyFilters","studentid","state","CPagination","CPaginationItem","disabled","Array","from","_","i"],"sourceRoot":""}