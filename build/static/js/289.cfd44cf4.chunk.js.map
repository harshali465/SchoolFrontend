{
  "version": 3,
  "file": "static/js/289.cfd44cf4.chunk.js",
  "mappings": "8PAAWA,EAAU,CAAC,UAAW,ojB,uCCmMjC,EAjLiB,WACf,IAAMC,GAAWC,EAAAA,EAAAA,MAGjBC,GAAgCC,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,gBAAiB,KACjBC,GAAAC,EAAAA,EAAAA,GAAAP,EAAA,GALKQ,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAO5BI,GAA4BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,EAAe,SAACC,GACpB,IAAAC,EAAwBD,EAAEE,OAAlBf,EAAIc,EAAJd,KAAMgB,EAAKF,EAALE,MACdT,GAAWU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIX,GAAQ,IAAAY,EAAAA,EAAAA,GAAA,GAAGlB,EAAOgB,IACrC,EAEMG,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOX,GAAC,IAAAY,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGqB,GAFhDlB,EAAEmB,iBAI8B,KAF1BP,EAAmBQ,EAAa3B,IAEjB4B,OAAY,CAAAL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIXI,EAAAA,EAAMC,KACtB,4CACA,CACEpC,KAAMM,EAASN,KACfC,MAAOK,EAASL,MAChBC,SAAUI,EAASJ,SACnBC,gBAAiBG,EAASH,kBAE5B,KAAD,EARKuB,EAAGG,EAAAQ,KASHV,EAAQD,EAAIY,KAAKX,MACvBY,aAAaC,QAAQ,cAAeb,GACpCc,QAAQC,IAAI,0BACZ9C,EAAS,KAAKiC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAc,GAAAd,EAAA,SAEdY,QAAQG,MAAM,gBAAef,EAAAc,IAAS,QAGxCpC,EAAY,CACVP,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,gBAAiB,KAEnBQ,EAAU,IAAIkB,EAAAE,KAAA,iBAGdpB,EAAUc,GAAkB,yBAAAI,EAAAgB,OAAA,GAAArB,EAAA,mBAE/B,gBArCiBsB,GAAA,OAAA1B,EAAA2B,MAAA,KAAAC,UAAA,KAwCZf,EAAe,SAACK,GACpB,IAAM5B,EAAS,GAsBf,OApBK4B,EAAKtC,KAAKiD,SACbvC,EAAO,GAAK,oBAGT4B,EAAKrC,MAAMgD,OAEJC,EAAaZ,EAAKrC,SAC5BS,EAAO,GAAK,wBAFZA,EAAO,GAAK,oBAKT4B,EAAKpC,SAECoC,EAAKpC,SAASgC,OAAS,IAChCxB,EAAO,GAAK,0CAFZA,EAAO,GAAK,uBAKV4B,EAAKpC,WAAaoC,EAAKnC,kBACzBO,EAAO,GAAK,0BAGPA,CACT,EAEMwC,EAAe,SAACjD,GAEpB,MADmB,iBACDkD,KAAKlD,EACzB,EAEA,OACEmD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yDAAwDC,UACrEF,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CAAAD,UACTF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACH,UAAU,yBAAwBC,UACtCF,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAEN,UACxBF,EAAAA,EAAAA,KAACS,EAAAA,GAAK,CAACR,UAAU,OAAMC,UACrBF,EAAAA,EAAAA,KAACU,EAAAA,GAAS,CAACT,UAAU,MAAKC,UACxBS,EAAAA,EAAAA,MAACC,EAAAA,GAAK,CAAAV,SAAA,EACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uBAAsBC,SAAC,yBACpCS,EAAAA,EAAAA,MAACE,EAAAA,GAAW,CAACZ,UAAU,GAAEC,SAAA,EACvBF,EAAAA,EAAAA,KAACc,EAAAA,GAAe,CAAAZ,UACdF,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CAACC,KAAMzE,OAEfyD,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CACTC,YAAY,WACZC,aAAa,WACbvE,KAAK,OACLgB,MAAOV,EAASN,KAChBwE,SAAU5D,QAGdwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAWoB,MAAO,CAAEC,MAAO,WAAYpB,SACnD5C,EAAO,KAAM0C,EAAAA,EAAAA,KAAA,OAAAE,SAAM5C,EAAO,QAG7BqD,EAAAA,EAAAA,MAACE,EAAAA,GAAW,CAACZ,UAAU,GAAEC,SAAA,EACvBF,EAAAA,EAAAA,KAACc,EAAAA,GAAe,CAAAZ,SAAC,OACjBF,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CACTC,YAAY,QACZC,aAAa,QACbvE,KAAK,QACLgB,MAAOV,EAASL,MAChBuE,SAAU5D,QAGdwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAWoB,MAAO,CAAEC,MAAO,WAAYpB,SACnD5C,EAAO,IACLA,EAAO,KAAM0C,EAAAA,EAAAA,KAAA,OAAAE,SAAM5C,EAAO,IAAMA,EAAO,QAE5CqD,EAAAA,EAAAA,MAACE,EAAAA,GAAW,CAACZ,UAAU,GAAEC,SAAA,EACvBF,EAAAA,EAAAA,KAACc,EAAAA,GAAe,CAAAZ,UACdF,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CAACC,KAAMO,EAAAA,OAEfvB,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CACTO,KAAK,WACLN,YAAY,WACZC,aAAa,eACbvE,KAAK,WACLgB,MAAOV,EAASJ,SAChBsE,SAAU5D,QAGdwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAWoB,MAAO,CAAEC,MAAO,WAAYpB,SACnD5C,EAAO,IACLA,EAAO,KAAM0C,EAAAA,EAAAA,KAAA,OAAAE,SAAM5C,EAAO,IAAMA,EAAO,QAE5CqD,EAAAA,EAAAA,MAACE,EAAAA,GAAW,CAACZ,UAAU,GAAEC,SAAA,EACvBF,EAAAA,EAAAA,KAACc,EAAAA,GAAe,CAAAZ,UACdF,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CAACC,KAAMO,EAAAA,OAEfvB,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CACTO,KAAK,WACLN,YAAY,kBACZC,aAAa,eACbvE,KAAK,kBACLgB,MAAOV,EAASH,gBAChBqE,SAAU5D,QAGdwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAWoB,MAAO,CAAEC,MAAO,WAAYpB,SACnD5C,EAAO,KAAM0C,EAAAA,EAAAA,KAAA,OAAAE,SAAM5C,EAAO,QAE7B0C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UACrBF,EAAAA,EAAAA,KAACyB,EAAAA,GAAO,CAACH,MAAM,UAAUI,QAAS3D,EAAamC,SAAC,mCAYpE,C,uDCjMU,IAACqB,EAAgB,CAAC,UAAW,6Q",
  "sources": [
    "../node_modules/@coreui/icons/src/free/cil-user.ts",
    "views/Register.js",
    "../node_modules/@coreui/icons/src/free/cil-lock-locked.ts"
  ],
  "sourcesContent": [
    "export var cilUser = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M411.6,343.656l-72.823-47.334,27.455-50.334A80.23,80.23,0,0,0,376,207.681V128a112,112,0,0,0-224,0v79.681a80.236,80.236,0,0,0,9.768,38.308l27.455,50.333L116.4,343.656A79.725,79.725,0,0,0,80,410.732V496H448V410.732A79.727,79.727,0,0,0,411.6,343.656ZM416,464H112V410.732a47.836,47.836,0,0,1,21.841-40.246l97.66-63.479-41.64-76.341A48.146,48.146,0,0,1,184,207.681V128a80,80,0,0,1,160,0v79.681a48.146,48.146,0,0,1-5.861,22.985L296.5,307.007l97.662,63.479h0A47.836,47.836,0,0,1,416,410.732Z' class='ci-primary'/>\"];\n",
    "import React, { useState } from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilLockLocked, cilUser } from \"@coreui/icons\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Register = () => {\n  const navigate = useNavigate();\n\n  // accepting data from the inputs\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\",\n  });\n\n  const [errors, setErrors] = useState([]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const validationErrors = validateForm(formData);\n\n    if (validationErrors.length === 0) {\n      // ready to be shipped\n\n      try {\n        const res = await axios.post(\n          \"http://18.118.42.224:3001/api/v1/users/signup\",\n          {\n            name: formData.name,\n            email: formData.email,\n            password: formData.password,\n            passwordConfirm: formData.passwordConfirm,\n          }\n        );\n        const token = res.data.token;\n        localStorage.setItem(\"accessToken\", token);\n        console.log(\"sucessfully registered\");\n        navigate(\"/\");\n      } catch (error) {\n        console.error(\"signup failed\", error);\n      }\n\n      setFormData({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        passwordConfirm: \"\",\n      });\n      setErrors([]);\n    } else {\n      // Data is not valid, set the validation errors\n      setErrors(validationErrors);\n    }\n  };\n\n  // validating credentials\n  const validateForm = (data) => {\n    const errors = [];\n\n    if (!data.name.trim()) {\n      errors[0] = \"Name is required\";\n    }\n\n    if (!data.email.trim()) {\n      errors[1] = \"Email is required\";\n    } else if (!isValidEmail(data.email)) {\n      errors[2] = \"Invalid email format\";\n    }\n\n    if (!data.password) {\n      errors[3] = \"Password is required\";\n    } else if (data.password.length < 8) {\n      errors[4] = \"Password must be at least 8 characters\";\n    }\n\n    if (data.password !== data.passwordConfirm) {\n      errors[5] = \"Passwords do not match\";\n    }\n\n    return errors;\n  };\n\n  const isValidEmail = (email) => {\n    const emailRegex = /^\\S+@\\S+\\.\\S+$/;\n    return emailRegex.test(email);\n  };\n\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={9} lg={7} xl={6}>\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm>\n                  <h1>Register</h1>\n                  <p className=\"text-medium-emphasis\">Create your account</p>\n                  <CInputGroup className=\"\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Username\"\n                      autoComplete=\"username\"\n                      name=\"name\"\n                      value={formData.name}\n                      onChange={handleChange}\n                    />\n                  </CInputGroup>\n                  <div className=\"err mb-3\" style={{ color: \"#ff3333\" }}>\n                    {errors[0] && <div>{errors[0]}</div>}\n                  </div>\n\n                  <CInputGroup className=\"\">\n                    <CInputGroupText>@</CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Email\"\n                      autoComplete=\"email\"\n                      name=\"email\"\n                      value={formData.email}\n                      onChange={handleChange}\n                    />\n                  </CInputGroup>\n                  <div className=\"err mb-3\" style={{ color: \"#ff3333\" }}>\n                    {errors[1] ||\n                      (errors[2] && <div>{errors[1] || errors[2]}</div>)}\n                  </div>\n                  <CInputGroup className=\"\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <CFormInput\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      autoComplete=\"new-password\"\n                      name=\"password\"\n                      value={formData.password}\n                      onChange={handleChange}\n                    />\n                  </CInputGroup>\n                  <div className=\"err mb-3\" style={{ color: \"#ff3333\" }}>\n                    {errors[3] ||\n                      (errors[4] && <div>{errors[3] || errors[4]}</div>)}\n                  </div>\n                  <CInputGroup className=\"\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <CFormInput\n                      type=\"password\"\n                      placeholder=\"Repeat password\"\n                      autoComplete=\"new-password\"\n                      name=\"passwordConfirm\"\n                      value={formData.passwordConfirm}\n                      onChange={handleChange}\n                    />\n                  </CInputGroup>\n                  <div className=\"err mb-4\" style={{ color: \"#ff3333\" }}>\n                    {errors[5] && <div>{errors[5]}</div>}\n                  </div>\n                  <div className=\"d-grid\">\n                    <CButton color=\"success\" onClick={handleSubmit}>\n                      Create Account\n                    </CButton>\n                  </div>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Register;\n",
    "export var cilLockLocked = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"];\n"
  ],
  "names": [
    "cilUser",
    "navigate",
    "useNavigate",
    "_useState",
    "useState",
    "name",
    "email",
    "password",
    "passwordConfirm",
    "_useState2",
    "_slicedToArray",
    "formData",
    "setFormData",
    "_useState3",
    "_useState4",
    "errors",
    "setErrors",
    "handleChange",
    "e",
    "_e$target",
    "target",
    "value",
    "_objectSpread",
    "_defineProperty",
    "handleSubmit",
    "_ref",
    "_asyncToGenerator",
    "_regeneratorRuntime",
    "mark",
    "_callee",
    "validationErrors",
    "res",
    "token",
    "wrap",
    "_context",
    "prev",
    "next",
    "preventDefault",
    "validateForm",
    "length",
    "axios",
    "post",
    "sent",
    "data",
    "localStorage",
    "setItem",
    "console",
    "log",
    "t0",
    "error",
    "stop",
    "_x",
    "apply",
    "arguments",
    "trim",
    "isValidEmail",
    "test",
    "_jsx",
    "className",
    "children",
    "CContainer",
    "CRow",
    "CCol",
    "md",
    "lg",
    "xl",
    "CCard",
    "CCardBody",
    "_jsxs",
    "CForm",
    "CInputGroup",
    "CInputGroupText",
    "CIcon",
    "icon",
    "CFormInput",
    "placeholder",
    "autoComplete",
    "onChange",
    "style",
    "color",
    "cilLockLocked",
    "type",
    "CButton",
    "onClick"
  ],
  "sourceRoot": ""
}
