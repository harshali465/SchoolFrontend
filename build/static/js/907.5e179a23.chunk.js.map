{"version":3,"file":"static/js/907.5e179a23.chunk.js","mappings":"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","sources":["views/Categories/CategoryListing.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport {\n  CButton,\n  CCol,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CFormLabel,\n  CFormSelect,\n  CFormCheck,\n  CFormFeedback,\n  CInputFile,\n  CRow,\n  CContainer,\n  CPagination,\n  CPaginationItem,\n} from \"@coreui/react\";\nimport axios from \"axios\";\n// imports for modal\nimport {\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n} from \"@coreui/react\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nfunction CategoryListing() {\n  const getUsers = async () => {\n    try {\n      const token =\n        \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NGIzNzQxYTRlOTIyNzU1ZTEzZjUwYSIsImlhdCI6MTY5OTQzMjE5NiwiZXhwIjoxNzAyMDI0MTk2fQ.Gn_VwncOvLdq9728FXSIESpmSw8J7Nu5d0AyezbwoOU\";\n\n      const response = await axios.get(\n        \"http://localhost:3001/api/v1/categories\",\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      console.log(response.data.data.docs);\n      setdummystudents(response.data.data.docs);\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  };\n  useEffect(() => {\n    getUsers();\n    setfilterActive(\"\");\n  }, []);\n\n  const navigate = useNavigate();\n  const [dummystudents, setdummystudents] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [visible, setVisible] = useState(false);\n\n  const [selectAll, setSelectAll] = useState(false);\n  const [collecIds, setcollecIds] = useState([]);\n\n  const toggleSelectAll = () => {\n    setcollecIds([]);\n\n    if (!selectAll) {\n      const selectedIds = dummystudents.map((student) => student._id);\n      setcollecIds(selectedIds);\n    } else {\n      setcollecIds([]);\n    }\n    // setting frontend to checked\n    setSelectAll(!selectAll);\n    setdummystudents((prevStudents) =>\n      prevStudents.map((student) => ({ ...student, selected: !selectAll }))\n    );\n  };\n\n  const handleSelect = async (index) => {\n    const updatedStudents = [...dummystudents];\n    if (updatedStudents[index].selected === false) {\n      setcollecIds([...collecIds, updatedStudents[index]._id]);\n    } else {\n      setcollecIds((prevCollecIds) =>\n        prevCollecIds.filter((id) => id !== updatedStudents[index]._id)\n      );\n    }\n\n    updatedStudents[index].selected = !updatedStudents[index].selected;\n    setdummystudents(updatedStudents);\n  };\n\n  const markActive = async () => {\n    const token =\n      \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NGIzNzQxYTRlOTIyNzU1ZTEzZjUwYSIsImlhdCI6MTY5OTQzMjE5NiwiZXhwIjoxNzAyMDI0MTk2fQ.Gn_VwncOvLdq9728FXSIESpmSw8J7Nu5d0AyezbwoOU\";\n\n    try {\n      const response = await axios.patch(\n        \"http://localhost:3001/api/v1/users/student\",\n        {\n          ids: collecIds,\n          active: true,\n        },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      console.log(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n\n    const updatedStudents = dummystudents.map((student) =>\n      student.selected ? { ...student, active: true } : student\n    );\n    setdummystudents(updatedStudents);\n  };\n\n  const markInactive = async () => {\n    const token =\n      \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NGIzNzQxYTRlOTIyNzU1ZTEzZjUwYSIsImlhdCI6MTY5OTQzMjE5NiwiZXhwIjoxNzAyMDI0MTk2fQ.Gn_VwncOvLdq9728FXSIESpmSw8J7Nu5d0AyezbwoOU\";\n\n    try {\n      const response = await axios.patch(\n        \"http://localhost:3001/api/v1/users/student\",\n        {\n          ids: collecIds,\n          active: false,\n        },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      console.log(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n    const updatedStudents = dummystudents.map((student) =>\n      student.selected ? { ...student, active: false } : student\n    );\n    setdummystudents(updatedStudents);\n  };\n\n  const deleteSelected = async () => {\n    const token =\n      \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NGIzNzQxYTRlOTIyNzU1ZTEzZjUwYSIsImlhdCI6MTY5OTQzMjE5NiwiZXhwIjoxNzAyMDI0MTk2fQ.Gn_VwncOvLdq9728FXSIESpmSw8J7Nu5d0AyezbwoOU\";\n\n    try {\n      const response = await axios.delete(\n        \"http://localhost:3001/api/v1/categories\",\n        {\n          data: { ids: collecIds },\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      console.log(response.data);\n      setVisible(false);\n    } catch (error) {\n      console.error(error);\n    }\n    getUsers();\n    // const updatedStudents =\n    // dummystudents.filter(\n    //   (student) => !student.selected\n    // );\n    // setdummystudents(updatedStudents);\n  };\n\n  const editStudent = (catid) => {\n    navigate(\"/editcategory\", {\n      state: { catid: catid },\n    });\n  };\n\n  //   filter states\n  const [filterKeyword, setFilterKeyword] = useState(\"\");\n  const [filterActive, setfilterActive] = useState(\"\");\n  const [tableState, setTableState] = useState(false);\n  const [filterDivision, setFilterDivision] = useState(\"\");\n  const [filterMinBehaviorPoints, setFilterMinBehaviorPoints] = useState(\"\");\n  const [filterMaxBehaviorPoints, setFilterMaxBehaviorPoints] = useState(\"\");\n\n  const handleFilterClick = () => {\n    setTableState((prevState) => !prevState);\n  };\n\n  //   function calling in the table\n  const applyFilters = (student) => {\n    // return student.name.toLowerCase().includes(filterKeyword.toLowerCase());\n    const keywordMatch = student.name\n      .toLowerCase()\n      .includes(filterKeyword.toLowerCase());\n    const isActiveMatch =\n      filterActive === \"\" || student.active === filterActive;\n\n    return keywordMatch && isActiveMatch;\n  };\n\n  // const secondFilter = (student) => {\n  //   if (usefilter === false) {\n  //     return console.log(\"filter aint applied\");\n  //   } else {\n  //     return student.active === filterActive;\n  //   }\n  // };\n\n  //   pagination\n\n  //   const [pageSize] = useState(4);\n  const [pageSize, setpageSize] = useState(students.length);\n  const [currentPage, setCurrentPage] = useState(1); // Current page, starts at 1\n\n  const handlePageChange = (newPage) => {\n    setCurrentPage(newPage);\n  };\n\n  // Calculate the range of students to display based on the current page\n  const startIndex = (currentPage - 1) * pageSize;\n  const endIndex = startIndex + pageSize;\n  const displayedStudents = students.slice(startIndex, endIndex);\n\n  const numPages = Math.ceil(students.length / pageSize);\n\n  const redirectto = () => {\n    navigate(\"/addcategory\");\n  };\n\n  return (\n    <div>\n      {/* modal */}\n      <CModal\n        backdrop=\"static\"\n        visible={visible}\n        onClose={() => {\n          setVisible(false);\n          setcollecIds([]);\n        }}\n        aria-labelledby=\"StaticBackdropExampleLabel\"\n      >\n        <CModalHeader>\n          <CModalTitle id=\"StaticBackdropExampleLabel\">\n            Delete Category\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>Are you sure you wish to delete this category?</CModalBody>\n        <CModalFooter>\n          <CButton\n            color=\"secondary\"\n            onClick={() => {\n              setVisible(false);\n              setcollecIds([]);\n            }}\n          >\n            Close\n          </CButton>\n          <CButton color=\"primary\" onClick={() => deleteSelected()}>\n            Yes!\n          </CButton>\n        </CModalFooter>\n      </CModal>\n      {/* Filters */}\n      <div className=\"mb-2\">\n        <div className=\"row pb-5\">\n          <div className=\"col-md-6 \">\n            <div className=\"display-6 pb-3 float-end\">Category listing</div>\n          </div>\n\n          <div className=\"col-md-6 \">\n            <button\n              className=\"btn btn-primary float-end\"\n              onClick={() => {\n                redirectto();\n              }}\n            >\n              Add Category\n            </button>\n          </div>\n        </div>\n        {/* filters */}\n        <div className=\"filters d-flex\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Search by keyword\"\n            value={filterKeyword}\n            onChange={(e) => setFilterKeyword(e.target.value)}\n          />\n        </div>\n      </div>\n\n      {/* buttons for action */}\n\n      <div className=\"pb-4 d-flex justify-content-start align-items-center\">\n        <div className=\"p-2 \">\n          <CFormCheck\n            type=\"radio\"\n            id=\"flexCheckDefault\"\n            label=\"Active\"\n            checked={filterActive === \"\" ? false : filterActive ? true : false}\n            onClick={() => {\n              setfilterActive(true);\n            }}\n          />\n        </div>\n        <div className=\"p-2\">\n          <CFormCheck\n            type=\"radio\"\n            id=\"flexCheckDefault\"\n            label=\"Inactive\"\n            checked={filterActive === \"\" ? false : filterActive ? false : true}\n            onClick={() => {\n              setfilterActive(false);\n            }}\n          />\n        </div>\n        {filterActive !== \"\" && (\n          <button\n            className=\"btn btn-dark btn-md \"\n            onClick={() => {\n              setfilterActive(\"\");\n            }}\n          >\n            Show all\n          </button>\n        )}\n\n        <button\n          className=\"btn btn-dark btn-md \"\n          onClick={() => {\n            setVisible(!visible);\n          }}\n        >\n          Delete Selected\n        </button>\n      </div>\n\n      <table className=\"table table-bordered\">\n        <thead>\n          <tr>\n            <th className=\"text-center\">\n              <input\n                type=\"checkbox\"\n                checked={selectAll}\n                onChange={toggleSelectAll}\n              />\n            </th>\n            <th className=\"text-center\">Name of Category</th>\n            <th className=\"text-center\">Number of Adaats</th>\n            <th className=\"text-center\">Status</th>\n            <th className=\"text-center\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {dummystudents\n            .filter((student) => applyFilters(student))\n\n            .map((student, index) => (\n              <tr key={index}>\n                <td className=\"text-center align-middle\">\n                  <input\n                    type=\"checkbox\"\n                    checked={student.selected}\n                    onChange={() => handleSelect(index)}\n                  />\n                </td>\n                <td className=\"text-center align-middle\">{student.name}</td>\n                <td className=\"text-center align-middle\">\n                  {student.assignedAadatCount}\n                </td>\n                <td className=\"text-center align-middle\">\n                  {student.active ? \"active\" : \"inactive\"}\n                </td>\n                <td className=\"text-center align-middle\">\n                  <button\n                    className=\"btn btn-primary btn-md\"\n                    onClick={() => {\n                      editStudent(student._id);\n                    }}\n                  >\n                    Edit\n                  </button>\n                  <button\n                    className=\"btn btn-dark btn-md\"\n                    onClick={() => {\n                      setcollecIds([]);\n                      setcollecIds([student._id]);\n                      setVisible(true);\n                    }}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      <div className=\"pagination\">\n        <CPagination aria-label=\"Page navigation\">\n          <CPaginationItem\n            onClick={() => handlePageChange(currentPage - 1)}\n            disabled={currentPage === 1}\n          >\n            Previous\n          </CPaginationItem>\n          {Array.from({ length: numPages }, (_, i) => (\n            <CPaginationItem\n              key={i}\n              active={currentPage === i + 1}\n              onClick={() => handlePageChange(i + 1)}\n            >\n              {i + 1}\n            </CPaginationItem>\n          ))}\n          <CPaginationItem\n            onClick={() => handlePageChange(currentPage + 1)}\n            disabled={currentPage === Math.ceil(students.length / pageSize)}\n          >\n            Next\n          </CPaginationItem>\n\n          <div className=\"d-flex\">\n            <CPaginationItem>Entries:</CPaginationItem>\n            <CPaginationItem>\n              <select\n                value={pageSize}\n                onChange={(e) => setpageSize(e.target.value)}\n              >\n                <option value=\"2\">2</option>\n                <option value=\"4\">4</option>\n                <option value={students.length}>all</option>\n                {/* Add more options as needed */}\n              </select>\n            </CPaginationItem>\n          </div>\n        </CPagination>\n      </div>\n    </div>\n  );\n}\n\nexport default CategoryListing;\n"],"names":["getUsers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","get","headers","Authorization","concat","sent","console","log","data","docs","setdummystudents","t0","error","stop","apply","arguments","useEffect","setfilterActive","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","dummystudents","_useState3","_useState4","students","_useState5","_useState6","visible","setVisible","_useState7","_useState8","selectAll","setSelectAll","_useState9","_useState10","collecIds","setcollecIds","handleSelect","_ref2","_callee2","index","updatedStudents","_context2","_toConsumableArray","selected","_id","prevCollecIds","filter","id","_x","deleteSelected","_ref5","_callee5","_context5","delete","ids","_useState11","_useState12","filterKeyword","setFilterKeyword","_useState13","_useState14","filterActive","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","_useState23","length","_useState24","pageSize","setpageSize","_useState25","_useState26","currentPage","setCurrentPage","handlePageChange","newPage","startIndex","endIndex","numPages","slice","Math","ceil","_jsxs","children","CModal","backdrop","onClose","_jsx","CModalHeader","CModalTitle","CModalBody","CModalFooter","CButton","color","onClick","className","type","placeholder","value","onChange","e","target","CFormCheck","label","checked","selectedIds","map","student","prevStudents","_objectSpread","keywordMatch","name","toLowerCase","includes","isActiveMatch","active","applyFilters","assignedAadatCount","catid","state","CPagination","CPaginationItem","disabled","Array","from","_","i"],"sourceRoot":""}