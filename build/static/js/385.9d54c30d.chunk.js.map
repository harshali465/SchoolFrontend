{"version":3,"file":"static/js/385.9d54c30d.chunk.js","mappings":"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","sources":["views/Manageschools/Addschool.js","../node_modules/randomstring/index.js","../node_modules/randomstring/lib/charset.js","../node_modules/randomstring/lib/randomstring.js","../node_modules/randomstring/node_modules/randombytes/browser.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   CButton,\r\n//   CCol,\r\n//   CForm,\r\n//   CFormInput,\r\n//   CInputGroup,\r\n//   CInputGroupText,\r\n//   CFormLabel,\r\n//   CFormSelect,\r\n//   CFormCheck,\r\n//   CFormFeedback,\r\n//   CInputFile,\r\n//   CRow,\r\n// } from \"@coreui/react\";\r\n\r\n// // imports for modal\r\n// import {\r\n//   CModal,\r\n//   CModalHeader,\r\n//   CModalTitle,\r\n//   CModalBody,\r\n//   CModalFooter,\r\n// } from \"@coreui/react\";\r\n\r\n// import axios from \"axios\";\r\n// import randomstring from \"randomstring\";\r\n\r\n// function Addschool() {\r\n//   const [visible, setVisible] = useState(false);\r\n//   const [approved, setapproved] = useState(false);\r\n//   const [formData, setFormData] = useState({\r\n//     schoolLogo: \"\",\r\n//     schoolName: \"\",\r\n//     contactPersonEmail: \"\",\r\n//     contactPersonName: \"\",\r\n//     contactPersonContact: \"\",\r\n//     numberOfStudents: \"\",\r\n//     addressLine1: \"\",\r\n//     addressLine2: \"\",\r\n//     cityState: \"\",\r\n//     country: \"\",\r\n//   });\r\n\r\n//   const handleChange = (event) => {\r\n//     const { name, value } = event.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n//   const generateRandomPassword = (length) => {\r\n//     return randomstring.generate({\r\n//       length: length,\r\n//       charset: \"alphanumeric\", // You can customize character sets\r\n//     });\r\n//   };\r\n\r\n//   const [validated, setValidated] = useState(false);\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n//     const form = event.currentTarget;\r\n//     if (form.checkValidity() === false) {\r\n//       setValidated(true);\r\n//     } else {\r\n//       console.log(\"form is valid and good to ship\");\r\n\r\n//       // asking for confirmation here\r\n//       setVisible(true);\r\n//       // if (approved === true) {\r\n//       //   const generatedPassword = generateRandomPassword(8); // Adjust the length as needed\r\n//       //   console.log(generatedPassword);\r\n\r\n//       //   const response = await axios.post(\r\n//       //     \"http://18.118.42.224:3001/api/v1/schools/addnewschool\",\r\n//       //     {\r\n//       //       schoolLogo: formData.schoolLogo,\r\n//       //       schoolName: formData.schoolName,\r\n//       //       contactPersonEmail: formData.contactPersonEmail,\r\n//       //       contactPersonName: formData.contactPersonName,\r\n//       //       contactPersonContact: formData.contactPersonContact,\r\n//       //       numberOfStudents: formData.numberOfStudents,\r\n//       //       addressLine1: formData.addressLine1,\r\n//       //       addressLine2: formData.addressLine2,\r\n//       //       cityState: formData.cityState,\r\n//       //       country: formData.country,\r\n//       //       password: generatedPassword,\r\n//       //     }\r\n//       //   );\r\n//       //   setVisible(false);\r\n//       //   console.log(response);\r\n//       //   resetValues();\r\n//       // }\r\n//     }\r\n//   };\r\n\r\n//   const handleFormSubmission = async () => {\r\n//     const generatedPassword = generateRandomPassword(8); // Adjust the length as needed\r\n//     console.log(generatedPassword);\r\n\r\n//     const response = await axios.post(\r\n//       \"http://18.118.42.224:3001/api/v1/schools/addnewschool\",\r\n\r\n//       {\r\n//         schoolLogo: formData.schoolLogo,\r\n//         schoolName: formData.schoolName,\r\n//         contactPersonEmail: formData.contactPersonEmail,\r\n//         contactPersonName: formData.contactPersonName,\r\n//         contactPersonContact: formData.contactPersonContact,\r\n//         numberOfStudents: formData.numberOfStudents,\r\n//         addressLine1: formData.addressLine1,\r\n//         addressLine2: formData.addressLine2,\r\n//         cityState: formData.cityState,\r\n//         country: formData.country,\r\n//         password: generatedPassword,\r\n//       }\r\n//     );\r\n\r\n//     setVisible(false);\r\n//     console.log(response);\r\n//     resetValues();\r\n//     setValidated(false);\r\n//   };\r\n\r\n//   const resetValues = () => {\r\n//     setFormData({\r\n//       schoolLogo: \"\",\r\n//       schoolName: \"\",\r\n//       contactPersonEmail: \"\",\r\n//       contactPersonName: \"\",\r\n//       contactPersonContact: \"\",\r\n//       numberOfStudents: \"\",\r\n//       addressLine1: \"\",\r\n//       addressLine2: \"\",\r\n//       cityState: \"\",\r\n//       country: \"\",\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"h-100\">\r\n//       {/* modal */}\r\n//       <CModal\r\n//         backdrop=\"static\"\r\n//         visible={visible}\r\n//         onClose={() => setVisible(false)}\r\n//         aria-labelledby=\"StaticBackdropExampleLabel\"\r\n//       >\r\n//         <CModalHeader>\r\n//           <CModalTitle id=\"StaticBackdropExampleLabel\">\r\n//             Form submission\r\n//           </CModalTitle>\r\n//         </CModalHeader>\r\n//         <CModalBody>Are you sure you wish to sumbit this form?</CModalBody>\r\n//         <CModalFooter>\r\n//           <CButton color=\"secondary\" onClick={() => setVisible(false)}>\r\n//             Close\r\n//           </CButton>\r\n//           <CButton color=\"primary\" onClick={handleFormSubmission}>\r\n//             Yes!\r\n//           </CButton>\r\n//         </CModalFooter>\r\n//       </CModal>\r\n//       <div className=\"display-4 text-center pb-2\">Add school</div>\r\n//       <div className=\"display-6 text-center pb-3\">school information</div>\r\n//       <div className=\"vertical-height d-flex justify-content-center\">\r\n//         <CForm\r\n//           className=\"needs-validation h-100 w-50\"\r\n//           noValidate\r\n//           validated={validated}\r\n//           onSubmit={handleSubmit}\r\n//         >\r\n//           <CRow className=\"row1-height\">\r\n//             <CCol className=\"d-flex flex-column align-items-center col1\">\r\n//               <CRow>\r\n//                 <CCol md={12} className=\"pt-2\">\r\n//                   <CFormInput\r\n//                     type=\"text\"\r\n//                     className=\"form-control\"\r\n//                     label=\"School logo\"\r\n//                     id=\"inputGroupFile02\"\r\n//                     name=\"schoolLogo\"\r\n//                     value={formData.schoolLogo}\r\n//                     onChange={handleChange}\r\n//                   />\r\n\r\n//                   {/* <div class=\"\">\r\n//                     <label for=\"formFile\" class=\"form-label\">\r\n//                       Default file input example\r\n//                     </label>\r\n//                     <input\r\n//                       class=\"form-control\"\r\n//                       type=\"file\"\r\n//                       id=\"formFile\"\r\n//                       name=\"schoolLogo\"\r\n//                       onChange={(e) => {\r\n//                         setFormData({\r\n//                           ...formData,\r\n//                           schoolLogo: e.target.files[0],\r\n//                         });\r\n//                       }}\r\n//                     />\r\n//                   </div> */}\r\n//                 </CCol>\r\n\r\n//                 <CCol md={12} className=\"pt-2\">\r\n//                   <CFormInput\r\n//                     type=\"text\"\r\n//                     feedbackValid=\"Looks good!\"\r\n//                     id=\"validationCustom01\"\r\n//                     label=\"School name\"\r\n//                     required\r\n//                     value={formData.schoolName}\r\n//                     onChange={handleChange}\r\n//                     name=\"schoolName\"\r\n//                   />\r\n//                 </CCol>\r\n// <CCol md={12} className=\"pt-2\">\r\n//   <CFormInput\r\n//     type=\"text\"\r\n//     feedbackValid=\"Looks good!\"\r\n//     id=\"validationCustom02\"\r\n//     placeholder=\"Addressline 1\"\r\n//     label=\"Address\"\r\n//     required\r\n//     value={formData.addressLine1}\r\n//     onChange={handleChange}\r\n//     name=\"addressLine1\"\r\n//   />\r\n// </CCol>\r\n// <CCol md={12} className=\"pt-2\">\r\n//   <CFormInput\r\n//     type=\"text\"\r\n//     feedbackValid=\"Looks good!\"\r\n//     id=\"validationCustom02\"\r\n//     placeholder=\"Addressline 2\"\r\n//     required\r\n//     value={formData.addressLine2}\r\n//     onChange={handleChange}\r\n//     name=\"addressLine2\"\r\n//   />\r\n// </CCol>\r\n// <CCol md={12} className=\"pt-2\">\r\n//   <CFormInput\r\n//     type=\"text\"\r\n//     feedbackValid=\"Looks good!\"\r\n//     id=\"validationCustom02\"\r\n//     placeholder=\"City, State\"\r\n//     required\r\n//     value={formData.cityState}\r\n//     onChange={handleChange}\r\n//     name=\"cityState\"\r\n//   />\r\n// </CCol>\r\n// <CCol md={12} className=\"pt-2\">\r\n//   <CFormInput\r\n//     type=\"text\"\r\n//     feedbackValid=\"Looks good!\"\r\n//     id=\"validationCustom02\"\r\n//     placeholder=\"Country\"\r\n//     required\r\n//     value={formData.country}\r\n//     onChange={handleChange}\r\n//     name=\"country\"\r\n//   />\r\n// </CCol>\r\n// <CCol md={12} className=\"pt-2\">\r\n//   <CFormInput\r\n//     type=\"number\"\r\n//     feedbackValid=\"Looks good!\"\r\n//     id=\"validationCustom03\"\r\n//     label=\"No of students\"\r\n//     required\r\n//     value={formData.numberOfStudents}\r\n//     onChange={handleChange}\r\n//     name=\"numberOfStudents\"\r\n//   />\r\n// </CCol>\r\n//               </CRow>\r\n//             </CCol>\r\n\r\n//             <CCol className=\"d-flex flex-column align-items-center col2\">\r\n//               <CRow>\r\n// <CCol md={12} className=\"pt-2\">\r\n//   <CFormInput\r\n//     type=\"text\"\r\n//     feedbackValid=\"Looks good!\"\r\n//     id=\"validationCustom01\"\r\n//     label=\"Contact person name\"\r\n//     required\r\n//     value={formData.contactPersonName}\r\n//     onChange={handleChange}\r\n//     name=\"contactPersonName\"\r\n//   />\r\n// </CCol>\r\n\r\n// <CCol md={12} className=\"pt-2\">\r\n//   <CFormInput\r\n//     type=\"number\"\r\n//     feedbackValid=\"Looks good!\"\r\n//     id=\"validationCustom03\"\r\n//     label=\"Contact number\"\r\n//     required\r\n//     value={formData.contactPersonContact}\r\n//     onChange={handleChange}\r\n//     name=\"contactPersonContact\"\r\n//   />\r\n// </CCol>\r\n// <CCol md={12} className=\"pt-2\">\r\n//   <CFormInput\r\n//     type=\"email\"\r\n//     feedbackValid=\"Looks good!\"\r\n//     id=\"validationCustom03\"\r\n//     label=\"Contact person email\"\r\n//     required\r\n//     value={formData.contactPersonEmail}\r\n//     onChange={handleChange}\r\n//     name=\"contactPersonEmail\"\r\n//   />\r\n// </CCol>\r\n//               </CRow>\r\n//             </CCol>\r\n//           </CRow>\r\n\r\n//           <CRow className=\"buttons text-center mt-3\">\r\n//             <CCol xs={12}>\r\n//               <CButton color=\"primary\" type=\"submit\">\r\n//                 Submit form\r\n//               </CButton>\r\n//             </CCol>\r\n//             <CCol xs={12} className=\"mt-2\">\r\n//               <CButton\r\n//                 color=\"dark\"\r\n//                 type=\"reset\"\r\n//                 onClick={() => {\r\n//                   resetValues();\r\n//                 }}\r\n//               >\r\n//                 Reset form\r\n//               </CButton>\r\n//             </CCol>\r\n//           </CRow>\r\n//         </CForm>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Addschool;\r\n\r\n// new addschool content\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CForm,\r\n  CFormInput,\r\n  CInputGroup,\r\n  CInputGroupText,\r\n  CFormLabel,\r\n  CFormSelect,\r\n  CFormCheck,\r\n  CFormFeedback,\r\n  CInputFile,\r\n  CRow,\r\n  CContainer,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { cilLockLocked, cilArrowThickRight } from \"@coreui/icons\";\r\n// imports for modal\r\nimport {\r\n  CModal,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CModalFooter,\r\n} from \"@coreui/react\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport randomstring from \"randomstring\";\r\n\r\nimport axios from \"axios\";\r\n\r\nfunction Addstudent() {\r\n  const token = localStorage.getItem(\"accessToken\");\r\n  const [formData, setFormData] = useState({\r\n    schoolLogo: \"\",\r\n    schoolName: \"\",\r\n    contactPersonEmail: \"\",\r\n    contactPersonName: \"\",\r\n    contactPersonContact: \"\",\r\n    numberOfStudents: \"\",\r\n    addressLine1: \"\",\r\n    addressLine2: \"\",\r\n    cityState: \"\",\r\n    country: \"\",\r\n  });\r\n\r\n  const [Popup1, setPopup1] = useState(false);\r\n  const [Popup2, setPopup2] = useState(false);\r\n  const [validated, setValidated] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      setValidated(true);\r\n    } else {\r\n      console.log(\"form is valid and good to ship\");\r\n\r\n      // asking for confirmation here\r\n      setVisible(true);\r\n    }\r\n  };\r\n\r\n  const generateRandomPassword = (length) => {\r\n    return randomstring.generate({\r\n      length: length,\r\n      charset: \"alphanumeric\", // You can customize character sets\r\n    });\r\n  };\r\n\r\n  const handleFormSubmission = async () => {\r\n    console.log(formData);\r\n    const generatedPassword = generateRandomPassword(8); // Adjust the length as needed\r\n    console.log(generatedPassword);\r\n    const response = await axios.post(\r\n      \"http://18.118.42.224:3001/api/v1/schools/addnewschool\",\r\n\r\n      {\r\n        schoolLogo: formData.schoolLogo,\r\n        schoolName: formData.schoolName,\r\n        contactPersonEmail: formData.contactPersonEmail,\r\n        contactPersonName: formData.contactPersonName,\r\n        contactPersonContact: formData.contactPersonContact,\r\n        numberOfStudents: formData.numberOfStudents,\r\n        addressLine1: formData.addressLine1,\r\n        addressLine2: formData.addressLine2,\r\n        cityState: formData.cityState,\r\n        country: formData.country,\r\n        password: generatedPassword,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          // Other headers can be added as needed\r\n        },\r\n      }\r\n    );\r\n\r\n    setVisible(false);\r\n    console.log(response);\r\n    resetData();\r\n  };\r\n\r\n  const resetData = () => {\r\n    setPopup1(false);\r\n    setPopup2(false);\r\n    setValidated(false);\r\n    setFormData({\r\n      schoolLogo: \"\",\r\n      schoolName: \"\",\r\n      contactPersonEmail: \"\",\r\n      contactPersonName: \"\",\r\n      contactPersonContact: \"\",\r\n      numberOfStudents: \"\",\r\n      addressLine1: \"\",\r\n      addressLine2: \"\",\r\n      cityState: \"\",\r\n      country: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CContainer fluid className=\"container overflow-auto\">\r\n        {/* modal */}\r\n        <CModal\r\n          backdrop=\"static\"\r\n          visible={visible}\r\n          onClose={() => setVisible(false)}\r\n          aria-labelledby=\"StaticBackdropExampleLabel\"\r\n        >\r\n          <CModalHeader>\r\n            <CModalTitle id=\"StaticBackdropExampleLabel\">\r\n              Form submission\r\n            </CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody>Are you sure you wish to sumbit this form?</CModalBody>\r\n          <CModalFooter>\r\n            <CButton color=\"secondary\" onClick={() => setVisible(false)}>\r\n              Close\r\n            </CButton>\r\n            <CButton color=\"primary\" onClick={handleFormSubmission}>\r\n              Yes!\r\n            </CButton>\r\n          </CModalFooter>\r\n        </CModal>\r\n        <div className=\"display-5 text-center pb-3 font-weight-bold\">\r\n          Add school\r\n        </div>\r\n        <div className=\"display-6 text-center pb-3\">School information</div>\r\n        <CForm\r\n          className=\"row g-3 needs-validation\"\r\n          noValidate\r\n          validated={validated}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <CRow>\r\n            <CCol md={6} className=\"d-flex flex-column align-items-center col1\">\r\n              <CCol className=\"pt-2\">\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  label=\"School logo\"\r\n                  id=\"inputGroupFile02\"\r\n                  name=\"schoolLogo\"\r\n                  value={formData.schoolLogo}\r\n                  onChange={handleChange}\r\n                />\r\n              </CCol>\r\n\r\n              <CCol className=\"pt-2\">\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  feedbackValid=\"Looks good!\"\r\n                  id=\"validationCustom01\"\r\n                  label=\"School name\"\r\n                  required\r\n                  value={formData.schoolName}\r\n                  onChange={handleChange}\r\n                  name=\"schoolName\"\r\n                />\r\n              </CCol>\r\n              <CCol className=\"pt-2\">\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  feedbackValid=\"Looks good!\"\r\n                  id=\"validationCustom02\"\r\n                  placeholder=\"Addressline 1\"\r\n                  label=\"Address\"\r\n                  required\r\n                  value={formData.addressLine1}\r\n                  onChange={handleChange}\r\n                  name=\"addressLine1\"\r\n                />\r\n              </CCol>\r\n              <CCol className=\"pt-2\">\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  feedbackValid=\"Looks good!\"\r\n                  id=\"validationCustom02\"\r\n                  placeholder=\"Addressline 2\"\r\n                  required\r\n                  value={formData.addressLine2}\r\n                  onChange={handleChange}\r\n                  name=\"addressLine2\"\r\n                />\r\n              </CCol>\r\n              <CCol className=\"pt-2\">\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  feedbackValid=\"Looks good!\"\r\n                  id=\"validationCustom02\"\r\n                  placeholder=\"City, State\"\r\n                  required\r\n                  value={formData.cityState}\r\n                  onChange={handleChange}\r\n                  name=\"cityState\"\r\n                />\r\n              </CCol>\r\n              <CCol className=\"pt-2\">\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  feedbackValid=\"Looks good!\"\r\n                  id=\"validationCustom02\"\r\n                  placeholder=\"Country\"\r\n                  required\r\n                  value={formData.country}\r\n                  onChange={handleChange}\r\n                  name=\"country\"\r\n                />\r\n              </CCol>\r\n              <CCol className=\"pt-2\">\r\n                <CFormInput\r\n                  type=\"number\"\r\n                  feedbackValid=\"Looks good!\"\r\n                  id=\"validationCustom03\"\r\n                  label=\"No of students\"\r\n                  required\r\n                  value={formData.numberOfStudents}\r\n                  onChange={handleChange}\r\n                  name=\"numberOfStudents\"\r\n                />\r\n              </CCol>\r\n            </CCol>\r\n\r\n            <CCol md={6} className=\"d-flex flex-column align-items-center col2\">\r\n              <CCol className=\"pt-2\">\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  feedbackValid=\"Looks good!\"\r\n                  id=\"validationCustom01\"\r\n                  label=\"Contact person name\"\r\n                  required\r\n                  value={formData.contactPersonName}\r\n                  onChange={handleChange}\r\n                  name=\"contactPersonName\"\r\n                />\r\n              </CCol>\r\n\r\n              <CCol className=\"pt-2\">\r\n                <CFormInput\r\n                  type=\"number\"\r\n                  feedbackValid=\"Looks good!\"\r\n                  id=\"validationCustom03\"\r\n                  label=\"Contact number\"\r\n                  required\r\n                  value={formData.contactPersonContact}\r\n                  onChange={handleChange}\r\n                  name=\"contactPersonContact\"\r\n                />\r\n              </CCol>\r\n              <CCol className=\"pt-2\">\r\n                <CFormInput\r\n                  type=\"email\"\r\n                  feedbackValid=\"Looks good!\"\r\n                  id=\"validationCustom03\"\r\n                  label=\"Contact person email\"\r\n                  required\r\n                  value={formData.contactPersonEmail}\r\n                  onChange={handleChange}\r\n                  name=\"contactPersonEmail\"\r\n                />\r\n              </CCol>\r\n            </CCol>\r\n          </CRow>\r\n\r\n          <div className=\"buttons text-center\">\r\n            <CButton color=\"primary\" type=\"submit\">\r\n              Submit form\r\n            </CButton>\r\n\r\n            <CButton color=\"dark\" type=\"reset\" onClick={resetData}>\r\n              Reset form\r\n            </CButton>\r\n          </div>\r\n        </CForm>\r\n      </CContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Addstudent;\r\n","module.exports = require(\"./lib/randomstring\");","function Charset() {\n  this.chars = '';\n}\n\nCharset.prototype.setType = function(type) {\n  if (Array.isArray(type)) {\n    for (var i=0; i < type.length; i++) {\n      this.chars += this.getCharacters(type[i]);\n    }\n  }\n  else {\n    this.chars = this.getCharacters(type);\n  }\n}\n\nCharset.prototype.getCharacters = function(type) {\n  var chars;\n\n  var numbers     = '0123456789';\n  var charsLower  = 'abcdefghijklmnopqrstuvwxyz';\n  var charsUpper  = charsLower.toUpperCase();\n  var hexChars    = 'abcdef';\n  var binaryChars = '01';\n  var octalChars  = '01234567';\n\n  if (type === 'alphanumeric') {\n    chars = numbers + charsLower + charsUpper;\n  }\n  else if (type === 'numeric') {\n    chars = numbers;\n  }\n  else if (type === 'alphabetic') {\n    chars = charsLower + charsUpper;\n  }\n  else if (type === 'hex') {\n    chars = numbers + hexChars;\n  }\n  else if (type === 'binary') {\n    chars = binaryChars;\n  }\n  else if (type === 'octal') {\n    chars = octalChars;\n  }\n  else {\n    chars = type;\n  }\n\n  return chars;\n}\n\nCharset.prototype.removeUnreadable = function() {\n  var unreadableChars = /[0OIl]/g;\n  this.chars = this.chars.replace(unreadableChars, '');\n}\n\nCharset.prototype.setcapitalization = function(capitalization) {\n  if (capitalization === 'uppercase') {\n    this.chars = this.chars.toUpperCase();\n  }\n  else if (capitalization === 'lowercase') {\n    this.chars = this.chars.toLowerCase();\n  }\n}\n\nCharset.prototype.removeDuplicates = function() {\n  var charMap = this.chars.split('');\n  charMap = [...new Set(charMap)];\n  this.chars = charMap.join('');\n}\n\nmodule.exports = exports = Charset;\n","\"use strict\";\n\nvar randomBytes = require('randombytes');\nvar Charset = require('./charset.js');\n\n\nfunction unsafeRandomBytes(length) {\n  var stack = [];\n  for (var i = 0; i < length; i++) {\n    stack.push(Math.floor(Math.random() * 255));\n  }\n\n  return {\n    length,\n    readUInt8: function (index) {\n      return stack[index];\n    }\n  };\n}\n\nfunction safeRandomBytes(length) {\n  try {\n    return randomBytes(length);\n  } catch (e) {\n    /* React/React Native Fix + Eternal loop removed */\n    return unsafeRandomBytes(length);\n  }\n}\n\nfunction processString(buf, initialString, chars, reqLen, maxByte) {\n  var string = initialString;\n  for (var i = 0; i < buf.length && string.length < reqLen; i++) {\n    var randomByte = buf.readUInt8(i);\n    if (randomByte < maxByte) {\n      string += chars.charAt(randomByte % chars.length);\n    }\n  }\n  return string;\n}\n\nfunction getAsyncString(string, chars, length, maxByte, cb) {\n  randomBytes(length, function(err, buf) {\n    if (err) {\n      // Since it is waiting for entropy, errors are legit and we shouldn't just keep retrying\n      cb(err);\n    }\n    var generatedString = processString(buf, string, chars, length, maxByte);\n    if (generatedString.length < length) {\n      getAsyncString(generatedString, chars, length, maxByte, cb);\n    } else {\n      cb(null, generatedString);\n    }\n  })\n}\n\nexports.generate = function(options, cb) {\n  var charset = new Charset();\n\n  var length, chars, capitalization, string = '';\n\n  // Handle options\n  if (typeof options === 'object') {\n    length = typeof options.length === 'number' ? options.length : 32;\n\n    if (options.charset) {\n      charset.setType(options.charset);\n    }\n    else {\n      charset.setType('alphanumeric');\n    }\n\n    if (options.capitalization) {\n      charset.setcapitalization(options.capitalization);\n    }\n\n    if (options.readable) {\n      charset.removeUnreadable();\n    }\n\n    charset.removeDuplicates();\n  }\n  else if (typeof options === 'number') {\n    length = options;\n    charset.setType('alphanumeric');\n  }\n  else {\n    length = 32;\n    charset.setType('alphanumeric');\n  }\n\n  // Generate the string\n  var charsLen = charset.chars.length;\n  var maxByte = 256 - (256 % charsLen);\n\n  if (!cb) {\n    while (string.length < length) {\n      var buf = safeRandomBytes(Math.ceil(length * 256 / maxByte));\n      string = processString(buf, string, charset.chars, length, maxByte);\n    }\n\n    return string;\n  }\n\n  getAsyncString(string, charset.chars, length, maxByte, cb);\n\n};\n","'use strict'\n\nfunction oldBrowser () {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11')\n}\n\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > 65536) throw new Error('requested too many random bytes')\n  // in case browserify  isn't using the Uint8Array version\n  var rawBytes = new global.Uint8Array(size)\n\n  // This will not work in older browsers.\n  // See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    crypto.getRandomValues(rawBytes)\n  }\n  // phantomjs doesn't like a buffer being passed here\n  var bytes = new Buffer(rawBytes.buffer)\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["token","localStorage","getItem","_useState","useState","schoolLogo","schoolName","contactPersonEmail","contactPersonName","contactPersonContact","numberOfStudents","addressLine1","addressLine2","cityState","country","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","setPopup1","_useState5","_useState6","setPopup2","_useState7","_useState8","validated","setValidated","_useState9","_useState10","visible","setVisible","useEffect","handleChange","event","_event$target","target","name","value","_objectSpread","_defineProperty","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","preventDefault","currentTarget","checkValidity","console","log","stop","_x","apply","arguments","handleFormSubmission","_ref2","_callee2","generatedPassword","response","_context2","length","randomstring","charset","axios","post","password","headers","Authorization","concat","sent","resetData","_jsx","_Fragment","children","_jsxs","CContainer","fluid","className","CModal","backdrop","onClose","CModalHeader","CModalTitle","id","CModalBody","CModalFooter","CButton","color","onClick","CForm","noValidate","onSubmit","CRow","CCol","md","CFormInput","type","label","onChange","feedbackValid","required","placeholder","module","exports","Charset","this","chars","prototype","setType","Array","isArray","i","getCharacters","numbers","charsLower","charsUpper","toUpperCase","removeUnreadable","replace","setcapitalization","capitalization","toLowerCase","removeDuplicates","charMap","split","_toConsumableArray","Set","join","randomBytes","require","safeRandomBytes","e","stack","push","Math","floor","random","readUInt8","index","unsafeRandomBytes","processString","buf","initialString","reqLen","maxByte","string","randomByte","charAt","getAsyncString","cb","err","generatedString","generate","options","readable","ceil","crypto","global","msCrypto","getRandomValues","size","Error","rawBytes","Uint8Array","bytes","Buffer","buffer","process","nextTick","arr","len","arr2","__esModule","arrayLikeToArray","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","Object","toString","call","slice","constructor","test"],"sourceRoot":""}